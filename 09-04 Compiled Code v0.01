{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "2ef377f8",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "%matplotlib inline\n",
    "\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "from sklearn.linear_model import Ridge, Lasso\n",
    "from sklearn.metrics import mean_squared_error,r2_score\n",
    "from sklearn.model_selection import train_test_split, cross_val_score\n",
    "from sklearn import model_selection\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.linear_model import RidgeCV, LassoCV\n",
    "\n",
    "from sklearn.model_selection import StratifiedKFold, cross_validate\n",
    "\n",
    "import math\n",
    "\n",
    "\n",
    "from sklearn.metrics import precision_score, recall_score, f1_score\n",
    "from sklearn.metrics import confusion_matrix, classification_report\n",
    "\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt \n",
    "from urllib.parse import urlparse\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.naive_bayes import MultinomialNB\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "from sklearn.metrics import precision_score, recall_score, f1_score\n",
    "from sklearn.metrics import confusion_matrix, classification_report\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn import metrics\n",
    "from sklearn.feature_selection import RFE\n",
    "from sklearn.feature_selection import RFECV\n",
    "from sklearn.model_selection import StratifiedKFold, cross_validate\n",
    "import statsmodels.api as sm\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "942127c9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Invoice</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>InvoiceDate</th>\n",
       "      <th>Price</th>\n",
       "      <th>Customer ID</th>\n",
       "      <th>Country</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>489434</td>\n",
       "      <td>85048</td>\n",
       "      <td>15CM CHRISTMAS GLASS BALL 20 LIGHTS</td>\n",
       "      <td>12</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>6.95</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>489434</td>\n",
       "      <td>79323P</td>\n",
       "      <td>PINK CHERRY LIGHTS</td>\n",
       "      <td>12</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>6.75</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>489434</td>\n",
       "      <td>79323W</td>\n",
       "      <td>WHITE CHERRY LIGHTS</td>\n",
       "      <td>12</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>6.75</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>489434</td>\n",
       "      <td>22041</td>\n",
       "      <td>RECORD FRAME 7\" SINGLE SIZE</td>\n",
       "      <td>48</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>2.10</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>489434</td>\n",
       "      <td>21232</td>\n",
       "      <td>STRAWBERRY CERAMIC TRINKET BOX</td>\n",
       "      <td>24</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>1.25</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1067366</th>\n",
       "      <td>581587</td>\n",
       "      <td>22899</td>\n",
       "      <td>CHILDREN'S APRON DOLLY GIRL</td>\n",
       "      <td>6</td>\n",
       "      <td>2011-12-09 12:50:00</td>\n",
       "      <td>2.10</td>\n",
       "      <td>12680.0</td>\n",
       "      <td>France</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1067367</th>\n",
       "      <td>581587</td>\n",
       "      <td>23254</td>\n",
       "      <td>CHILDRENS CUTLERY DOLLY GIRL</td>\n",
       "      <td>4</td>\n",
       "      <td>2011-12-09 12:50:00</td>\n",
       "      <td>4.15</td>\n",
       "      <td>12680.0</td>\n",
       "      <td>France</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1067368</th>\n",
       "      <td>581587</td>\n",
       "      <td>23255</td>\n",
       "      <td>CHILDRENS CUTLERY CIRCUS PARADE</td>\n",
       "      <td>4</td>\n",
       "      <td>2011-12-09 12:50:00</td>\n",
       "      <td>4.15</td>\n",
       "      <td>12680.0</td>\n",
       "      <td>France</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1067369</th>\n",
       "      <td>581587</td>\n",
       "      <td>22138</td>\n",
       "      <td>BAKING SET 9 PIECE RETROSPOT</td>\n",
       "      <td>3</td>\n",
       "      <td>2011-12-09 12:50:00</td>\n",
       "      <td>4.95</td>\n",
       "      <td>12680.0</td>\n",
       "      <td>France</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1067370</th>\n",
       "      <td>581587</td>\n",
       "      <td>POST</td>\n",
       "      <td>POSTAGE</td>\n",
       "      <td>1</td>\n",
       "      <td>2011-12-09 12:50:00</td>\n",
       "      <td>18.00</td>\n",
       "      <td>12680.0</td>\n",
       "      <td>France</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1067371 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Invoice StockCode                          Description  Quantity  \\\n",
       "0        489434     85048  15CM CHRISTMAS GLASS BALL 20 LIGHTS        12   \n",
       "1        489434    79323P                   PINK CHERRY LIGHTS        12   \n",
       "2        489434    79323W                  WHITE CHERRY LIGHTS        12   \n",
       "3        489434     22041         RECORD FRAME 7\" SINGLE SIZE         48   \n",
       "4        489434     21232       STRAWBERRY CERAMIC TRINKET BOX        24   \n",
       "...         ...       ...                                  ...       ...   \n",
       "1067366  581587     22899         CHILDREN'S APRON DOLLY GIRL          6   \n",
       "1067367  581587     23254        CHILDRENS CUTLERY DOLLY GIRL          4   \n",
       "1067368  581587     23255      CHILDRENS CUTLERY CIRCUS PARADE         4   \n",
       "1067369  581587     22138        BAKING SET 9 PIECE RETROSPOT          3   \n",
       "1067370  581587      POST                              POSTAGE         1   \n",
       "\n",
       "                 InvoiceDate  Price  Customer ID         Country  \n",
       "0        2009-12-01 07:45:00   6.95      13085.0  United Kingdom  \n",
       "1        2009-12-01 07:45:00   6.75      13085.0  United Kingdom  \n",
       "2        2009-12-01 07:45:00   6.75      13085.0  United Kingdom  \n",
       "3        2009-12-01 07:45:00   2.10      13085.0  United Kingdom  \n",
       "4        2009-12-01 07:45:00   1.25      13085.0  United Kingdom  \n",
       "...                      ...    ...          ...             ...  \n",
       "1067366  2011-12-09 12:50:00   2.10      12680.0          France  \n",
       "1067367  2011-12-09 12:50:00   4.15      12680.0          France  \n",
       "1067368  2011-12-09 12:50:00   4.15      12680.0          France  \n",
       "1067369  2011-12-09 12:50:00   4.95      12680.0          France  \n",
       "1067370  2011-12-09 12:50:00  18.00      12680.0          France  \n",
       "\n",
       "[1067371 rows x 8 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('online_retail_II 2.csv')\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "77b24080",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method NDFrame.describe of         Invoice StockCode                          Description  Quantity  \\\n",
       "0        489434     85048  15CM CHRISTMAS GLASS BALL 20 LIGHTS        12   \n",
       "1        489434    79323P                   PINK CHERRY LIGHTS        12   \n",
       "2        489434    79323W                  WHITE CHERRY LIGHTS        12   \n",
       "3        489434     22041         RECORD FRAME 7\" SINGLE SIZE         48   \n",
       "4        489434     21232       STRAWBERRY CERAMIC TRINKET BOX        24   \n",
       "...         ...       ...                                  ...       ...   \n",
       "1067366  581587     22899         CHILDREN'S APRON DOLLY GIRL          6   \n",
       "1067367  581587     23254        CHILDRENS CUTLERY DOLLY GIRL          4   \n",
       "1067368  581587     23255      CHILDRENS CUTLERY CIRCUS PARADE         4   \n",
       "1067369  581587     22138        BAKING SET 9 PIECE RETROSPOT          3   \n",
       "1067370  581587      POST                              POSTAGE         1   \n",
       "\n",
       "                 InvoiceDate  Price  Customer ID         Country  \n",
       "0        2009-12-01 07:45:00   6.95      13085.0  United Kingdom  \n",
       "1        2009-12-01 07:45:00   6.75      13085.0  United Kingdom  \n",
       "2        2009-12-01 07:45:00   6.75      13085.0  United Kingdom  \n",
       "3        2009-12-01 07:45:00   2.10      13085.0  United Kingdom  \n",
       "4        2009-12-01 07:45:00   1.25      13085.0  United Kingdom  \n",
       "...                      ...    ...          ...             ...  \n",
       "1067366  2011-12-09 12:50:00   2.10      12680.0          France  \n",
       "1067367  2011-12-09 12:50:00   4.15      12680.0          France  \n",
       "1067368  2011-12-09 12:50:00   4.15      12680.0          France  \n",
       "1067369  2011-12-09 12:50:00   4.95      12680.0          France  \n",
       "1067370  2011-12-09 12:50:00  18.00      12680.0          France  \n",
       "\n",
       "[1067371 rows x 8 columns]>"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "08be8b23",
   "metadata": {},
   "source": [
    "## Data Cleaning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d7e5801d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1067371 entries, 0 to 1067370\n",
      "Data columns (total 8 columns):\n",
      " #   Column       Non-Null Count    Dtype  \n",
      "---  ------       --------------    -----  \n",
      " 0   InvoiceNo    1067371 non-null  object \n",
      " 1   StockCode    1067371 non-null  object \n",
      " 2   Description  1062989 non-null  object \n",
      " 3   Quantity     1067371 non-null  int64  \n",
      " 4   InvoiceDate  1067371 non-null  object \n",
      " 5   UnitPrice    1067371 non-null  float64\n",
      " 6   CustomerID   824364 non-null   float64\n",
      " 7   Country      1067371 non-null  object \n",
      "dtypes: float64(2), int64(1), object(5)\n",
      "memory usage: 65.1+ MB\n"
     ]
    }
   ],
   "source": [
    "# Rename the columns to have intutive names\n",
    "\n",
    "df = df.rename(columns = {'Customer ID': 'CustomerID', 'Invoice':'InvoiceNo','Price': 'UnitPrice'})\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d58d0ef0",
   "metadata": {},
   "source": [
    "Description and Customer Id columns have null values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "dc880e65",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of nulls in 'Description' column: 4382\n",
      "Percentage of nulls in 'Description' column: 0.4105414143723223\n",
      "Number of nulls in 'CustomerID' column: 243007\n",
      "Percentage of nulls in 'CustomerID' column: 22.766872999172733\n"
     ]
    }
   ],
   "source": [
    "print(\"Number of nulls in 'Description' column:\", df['Description'].isnull().sum())\n",
    "print(\"Percentage of nulls in 'Description' column:\", df['Description'].isnull().sum()*100/df.shape[0])\n",
    "\n",
    "\n",
    "print(\"Number of nulls in 'CustomerID' column:\", df['CustomerID'].isnull().sum())\n",
    "print(\"Percentage of nulls in 'CustomerID' column:\", df['CustomerID'].isnull().sum()*100/df.shape[0])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "af3db9bf",
   "metadata": {},
   "source": [
    "About 23% of the data's CustomerIDs are missing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "8573be38",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "34335"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check number of duplicated values\n",
    "df.duplicated().sum().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "03460bd2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>InvoiceDate</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>371</th>\n",
       "      <td>489517</td>\n",
       "      <td>21912</td>\n",
       "      <td>VINTAGE SNAKES &amp; LADDERS</td>\n",
       "      <td>1</td>\n",
       "      <td>2009-12-01 11:34:00</td>\n",
       "      <td>3.75</td>\n",
       "      <td>16329.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>383</th>\n",
       "      <td>489517</td>\n",
       "      <td>22130</td>\n",
       "      <td>PARTY CONE CHRISTMAS DECORATION</td>\n",
       "      <td>6</td>\n",
       "      <td>2009-12-01 11:34:00</td>\n",
       "      <td>0.85</td>\n",
       "      <td>16329.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>384</th>\n",
       "      <td>489517</td>\n",
       "      <td>22319</td>\n",
       "      <td>HAIRCLIPS FORTIES FABRIC ASSORTED</td>\n",
       "      <td>12</td>\n",
       "      <td>2009-12-01 11:34:00</td>\n",
       "      <td>0.65</td>\n",
       "      <td>16329.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>385</th>\n",
       "      <td>489517</td>\n",
       "      <td>21913</td>\n",
       "      <td>VINTAGE SEASIDE JIGSAW PUZZLES</td>\n",
       "      <td>1</td>\n",
       "      <td>2009-12-01 11:34:00</td>\n",
       "      <td>3.75</td>\n",
       "      <td>16329.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>386</th>\n",
       "      <td>489517</td>\n",
       "      <td>21821</td>\n",
       "      <td>GLITTER STAR GARLAND WITH BELLS</td>\n",
       "      <td>1</td>\n",
       "      <td>2009-12-01 11:34:00</td>\n",
       "      <td>3.75</td>\n",
       "      <td>16329.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>390</th>\n",
       "      <td>489517</td>\n",
       "      <td>84951A</td>\n",
       "      <td>S/4 PISTACHIO LOVEBIRD COASTERS</td>\n",
       "      <td>1</td>\n",
       "      <td>2009-12-01 11:34:00</td>\n",
       "      <td>2.55</td>\n",
       "      <td>16329.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>391</th>\n",
       "      <td>489517</td>\n",
       "      <td>21491</td>\n",
       "      <td>SET OF THREE VINTAGE GIFT WRAPS</td>\n",
       "      <td>1</td>\n",
       "      <td>2009-12-01 11:34:00</td>\n",
       "      <td>1.95</td>\n",
       "      <td>16329.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>394</th>\n",
       "      <td>489517</td>\n",
       "      <td>21912</td>\n",
       "      <td>VINTAGE SNAKES &amp; LADDERS</td>\n",
       "      <td>1</td>\n",
       "      <td>2009-12-01 11:34:00</td>\n",
       "      <td>3.75</td>\n",
       "      <td>16329.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>657</th>\n",
       "      <td>489529</td>\n",
       "      <td>22028</td>\n",
       "      <td>PENNY FARTHING BIRTHDAY CARD</td>\n",
       "      <td>12</td>\n",
       "      <td>2009-12-01 11:51:00</td>\n",
       "      <td>0.42</td>\n",
       "      <td>17984.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>658</th>\n",
       "      <td>489529</td>\n",
       "      <td>22036</td>\n",
       "      <td>DINOSAUR BIRTHDAY CARD</td>\n",
       "      <td>12</td>\n",
       "      <td>2009-12-01 11:51:00</td>\n",
       "      <td>0.42</td>\n",
       "      <td>17984.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    InvoiceNo StockCode                        Description  Quantity  \\\n",
       "371    489517     21912           VINTAGE SNAKES & LADDERS         1   \n",
       "383    489517     22130   PARTY CONE CHRISTMAS DECORATION          6   \n",
       "384    489517     22319  HAIRCLIPS FORTIES FABRIC ASSORTED        12   \n",
       "385    489517     21913     VINTAGE SEASIDE JIGSAW PUZZLES         1   \n",
       "386    489517     21821   GLITTER STAR GARLAND WITH BELLS          1   \n",
       "390    489517    84951A    S/4 PISTACHIO LOVEBIRD COASTERS         1   \n",
       "391    489517     21491    SET OF THREE VINTAGE GIFT WRAPS         1   \n",
       "394    489517     21912           VINTAGE SNAKES & LADDERS         1   \n",
       "657    489529     22028       PENNY FARTHING BIRTHDAY CARD        12   \n",
       "658    489529     22036             DINOSAUR BIRTHDAY CARD        12   \n",
       "\n",
       "             InvoiceDate  UnitPrice  CustomerID         Country  \n",
       "371  2009-12-01 11:34:00       3.75     16329.0  United Kingdom  \n",
       "383  2009-12-01 11:34:00       0.85     16329.0  United Kingdom  \n",
       "384  2009-12-01 11:34:00       0.65     16329.0  United Kingdom  \n",
       "385  2009-12-01 11:34:00       3.75     16329.0  United Kingdom  \n",
       "386  2009-12-01 11:34:00       3.75     16329.0  United Kingdom  \n",
       "390  2009-12-01 11:34:00       2.55     16329.0  United Kingdom  \n",
       "391  2009-12-01 11:34:00       1.95     16329.0  United Kingdom  \n",
       "394  2009-12-01 11:34:00       3.75     16329.0  United Kingdom  \n",
       "657  2009-12-01 11:51:00       0.42     17984.0  United Kingdom  \n",
       "658  2009-12-01 11:51:00       0.42     17984.0  United Kingdom  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Get the duplicated rows\n",
    "duplicates = df[df.duplicated()]\n",
    "duplicates[:10]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "549b7805",
   "metadata": {},
   "source": [
    "It seems that products, which were bought together in one invoice, were considered as duplicates. However, there are no duplicates, if we look at the *Description* column\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "2f7a5fd8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5942"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "### Number of unique customers\n",
    "df['CustomerID'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "d69b639f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "53628"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "### Number of purchases\n",
    "df['InvoiceNo'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "c17b41ce",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "('2009-12-01 07:45:00', '2011-12-09 12:50:00')"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "### Period of time\n",
    "\n",
    "df['InvoiceDate'].min(), df['InvoiceDate'].max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "e9a58b64",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1280x960 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "## Country wise Distribution\n",
    "\n",
    "from matplotlib.pyplot import figure\n",
    "\n",
    "figure(figsize=(16, 12), dpi=80)\n",
    "\n",
    "Country_Distribution = df['Country'].value_counts()*100/len(df['Country'])\n",
    "\n",
    "Country_Distribution.plot.bar()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "afc12409",
   "metadata": {},
   "source": [
    "91% of the data is from the UK"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "b3fd975b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Quantity</th>\n",
       "      <td>1067371.0</td>\n",
       "      <td>9.938898</td>\n",
       "      <td>172.705794</td>\n",
       "      <td>-80995.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.00</td>\n",
       "      <td>80995.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>UnitPrice</th>\n",
       "      <td>1067371.0</td>\n",
       "      <td>4.649388</td>\n",
       "      <td>123.553059</td>\n",
       "      <td>-53594.36</td>\n",
       "      <td>1.25</td>\n",
       "      <td>2.1</td>\n",
       "      <td>4.15</td>\n",
       "      <td>38970.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CustomerID</th>\n",
       "      <td>824364.0</td>\n",
       "      <td>15324.638504</td>\n",
       "      <td>1697.464450</td>\n",
       "      <td>12346.00</td>\n",
       "      <td>13975.00</td>\n",
       "      <td>15255.0</td>\n",
       "      <td>16797.00</td>\n",
       "      <td>18287.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                count          mean          std       min       25%      50%  \\\n",
       "Quantity    1067371.0      9.938898   172.705794 -80995.00      1.00      3.0   \n",
       "UnitPrice   1067371.0      4.649388   123.553059 -53594.36      1.25      2.1   \n",
       "CustomerID   824364.0  15324.638504  1697.464450  12346.00  13975.00  15255.0   \n",
       "\n",
       "                 75%      max  \n",
       "Quantity       10.00  80995.0  \n",
       "UnitPrice       4.15  38970.0  \n",
       "CustomerID  16797.00  18287.0  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Check the Data Distribution\n",
    "df.describe().T"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "47c41c7c",
   "metadata": {},
   "source": [
    "Looks like there are outliers in Quantity and UnitPrice - Let's check if these outliers are valid?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "84f1f82c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>InvoiceDate</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1065882</th>\n",
       "      <td>581483</td>\n",
       "      <td>23843</td>\n",
       "      <td>PAPER CRAFT , LITTLE BIRDIE</td>\n",
       "      <td>80995</td>\n",
       "      <td>2011-12-09 09:15:00</td>\n",
       "      <td>2.08</td>\n",
       "      <td>16446.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        InvoiceNo StockCode                  Description  Quantity  \\\n",
       "1065882    581483     23843  PAPER CRAFT , LITTLE BIRDIE     80995   \n",
       "\n",
       "                 InvoiceDate  UnitPrice  CustomerID         Country  \n",
       "1065882  2011-12-09 09:15:00       2.08     16446.0  United Kingdom  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['Quantity']==df['Quantity'].max()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "e0734ec3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Quantity'>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.set(rc={'figure.figsize':(20,4)})\n",
    "\n",
    "sns.set(style='whitegrid')\n",
    "sns.boxplot(df['Quantity'],\n",
    "                data=df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "451acea3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='UnitPrice'>"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.set(rc={'figure.figsize':(20,4)})\n",
    "\n",
    "sns.set(style='whitegrid')\n",
    "sns.boxplot(df['UnitPrice'],\n",
    "                data=df)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "23c96dbd",
   "metadata": {},
   "source": [
    "There are plenty of outliers in the data, we can remove these outliers as they seem to be errors in the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "18e14210",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Quantity</th>\n",
       "      <td>1067371.0</td>\n",
       "      <td>9.191174</td>\n",
       "      <td>23.264021</td>\n",
       "      <td>-157.500</td>\n",
       "      <td>1.00</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.00</td>\n",
       "      <td>254.500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>UnitPrice</th>\n",
       "      <td>1067371.0</td>\n",
       "      <td>3.438146</td>\n",
       "      <td>4.202464</td>\n",
       "      <td>-26.475</td>\n",
       "      <td>1.25</td>\n",
       "      <td>2.1</td>\n",
       "      <td>4.15</td>\n",
       "      <td>44.685</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CustomerID</th>\n",
       "      <td>824364.0</td>\n",
       "      <td>15324.638504</td>\n",
       "      <td>1697.464450</td>\n",
       "      <td>12346.000</td>\n",
       "      <td>13975.00</td>\n",
       "      <td>15255.0</td>\n",
       "      <td>16797.00</td>\n",
       "      <td>18287.000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                count          mean          std        min       25%  \\\n",
       "Quantity    1067371.0      9.191174    23.264021   -157.500      1.00   \n",
       "UnitPrice   1067371.0      3.438146     4.202464    -26.475      1.25   \n",
       "CustomerID   824364.0  15324.638504  1697.464450  12346.000  13975.00   \n",
       "\n",
       "                50%       75%        max  \n",
       "Quantity        3.0     10.00    254.500  \n",
       "UnitPrice       2.1      4.15     44.685  \n",
       "CustomerID  15255.0  16797.00  18287.000  "
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "# Let's solve outlier problem and change outlier's value. We will fix them a certain value\n",
    "def outlier_thresholds(dataframe, variable):\n",
    "    quartile1 = dataframe[variable].quantile(0.01)\n",
    "    quartile3 = dataframe[variable].quantile(0.99)\n",
    "    interquantile_range = quartile3 - quartile1\n",
    "    up_limit = quartile3 + 1.5 * interquantile_range\n",
    "    low_limit = quartile1 - 1.5 * interquantile_range\n",
    "    return low_limit, up_limit\n",
    "\n",
    "def replace_with_thresholds(dataframe, variable):\n",
    "    low_limit, up_limit = outlier_thresholds(dataframe, variable)\n",
    "    dataframe.loc[(dataframe[variable] < low_limit), variable] = low_limit\n",
    "    dataframe.loc[(dataframe[variable] > up_limit), variable] = up_limit\n",
    "\n",
    "replace_with_thresholds(df, \"Quantity\")\n",
    "replace_with_thresholds(df, \"UnitPrice\")\n",
    "df.describe().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "a46baee2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>InvoiceDate</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>179403</th>\n",
       "      <td>A506401</td>\n",
       "      <td>B</td>\n",
       "      <td>Adjust bad debt</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2010-04-29 13:36:00</td>\n",
       "      <td>-26.475</td>\n",
       "      <td>NaN</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>276274</th>\n",
       "      <td>A516228</td>\n",
       "      <td>B</td>\n",
       "      <td>Adjust bad debt</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2010-07-19 11:24:00</td>\n",
       "      <td>-26.475</td>\n",
       "      <td>NaN</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>403472</th>\n",
       "      <td>A528059</td>\n",
       "      <td>B</td>\n",
       "      <td>Adjust bad debt</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2010-10-20 12:04:00</td>\n",
       "      <td>-26.475</td>\n",
       "      <td>NaN</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>825444</th>\n",
       "      <td>A563186</td>\n",
       "      <td>B</td>\n",
       "      <td>Adjust bad debt</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2011-08-12 14:51:00</td>\n",
       "      <td>-26.475</td>\n",
       "      <td>NaN</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>825445</th>\n",
       "      <td>A563187</td>\n",
       "      <td>B</td>\n",
       "      <td>Adjust bad debt</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2011-08-12 14:52:00</td>\n",
       "      <td>-26.475</td>\n",
       "      <td>NaN</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       InvoiceNo StockCode      Description  Quantity          InvoiceDate  \\\n",
       "179403   A506401         B  Adjust bad debt       1.0  2010-04-29 13:36:00   \n",
       "276274   A516228         B  Adjust bad debt       1.0  2010-07-19 11:24:00   \n",
       "403472   A528059         B  Adjust bad debt       1.0  2010-10-20 12:04:00   \n",
       "825444   A563186         B  Adjust bad debt       1.0  2011-08-12 14:51:00   \n",
       "825445   A563187         B  Adjust bad debt       1.0  2011-08-12 14:52:00   \n",
       "\n",
       "        UnitPrice  CustomerID         Country  \n",
       "179403    -26.475         NaN  United Kingdom  \n",
       "276274    -26.475         NaN  United Kingdom  \n",
       "403472    -26.475         NaN  United Kingdom  \n",
       "825444    -26.475         NaN  United Kingdom  \n",
       "825445    -26.475         NaN  United Kingdom  "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['UnitPrice'] < 0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0d894d8c",
   "metadata": {},
   "source": [
    "These rows seem to be unnecessary and can be dropped"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "7f3f70ba",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>InvoiceDate</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>178</th>\n",
       "      <td>C489449</td>\n",
       "      <td>22087</td>\n",
       "      <td>PAPER BUNTING WHITE LACE</td>\n",
       "      <td>-12.0</td>\n",
       "      <td>2009-12-01 10:33:00</td>\n",
       "      <td>2.950</td>\n",
       "      <td>16321.0</td>\n",
       "      <td>Australia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179</th>\n",
       "      <td>C489449</td>\n",
       "      <td>85206A</td>\n",
       "      <td>CREAM FELT EASTER EGG BASKET</td>\n",
       "      <td>-6.0</td>\n",
       "      <td>2009-12-01 10:33:00</td>\n",
       "      <td>1.650</td>\n",
       "      <td>16321.0</td>\n",
       "      <td>Australia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>C489449</td>\n",
       "      <td>21895</td>\n",
       "      <td>POTTING SHED SOW 'N' GROW SET</td>\n",
       "      <td>-4.0</td>\n",
       "      <td>2009-12-01 10:33:00</td>\n",
       "      <td>4.250</td>\n",
       "      <td>16321.0</td>\n",
       "      <td>Australia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>C489449</td>\n",
       "      <td>21896</td>\n",
       "      <td>POTTING SHED TWINE</td>\n",
       "      <td>-6.0</td>\n",
       "      <td>2009-12-01 10:33:00</td>\n",
       "      <td>2.100</td>\n",
       "      <td>16321.0</td>\n",
       "      <td>Australia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>182</th>\n",
       "      <td>C489449</td>\n",
       "      <td>22083</td>\n",
       "      <td>PAPER CHAIN KIT RETRO SPOT</td>\n",
       "      <td>-12.0</td>\n",
       "      <td>2009-12-01 10:33:00</td>\n",
       "      <td>2.950</td>\n",
       "      <td>16321.0</td>\n",
       "      <td>Australia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1065910</th>\n",
       "      <td>C581490</td>\n",
       "      <td>23144</td>\n",
       "      <td>ZINC T-LIGHT HOLDER STARS SMALL</td>\n",
       "      <td>-11.0</td>\n",
       "      <td>2011-12-09 09:57:00</td>\n",
       "      <td>0.830</td>\n",
       "      <td>14397.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1067002</th>\n",
       "      <td>C581499</td>\n",
       "      <td>M</td>\n",
       "      <td>Manual</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>2011-12-09 10:28:00</td>\n",
       "      <td>44.685</td>\n",
       "      <td>15498.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1067176</th>\n",
       "      <td>C581568</td>\n",
       "      <td>21258</td>\n",
       "      <td>VICTORIAN SEWING BOX LARGE</td>\n",
       "      <td>-5.0</td>\n",
       "      <td>2011-12-09 11:57:00</td>\n",
       "      <td>10.950</td>\n",
       "      <td>15311.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1067177</th>\n",
       "      <td>C581569</td>\n",
       "      <td>84978</td>\n",
       "      <td>HANGING HEART JAR T-LIGHT HOLDER</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>2011-12-09 11:58:00</td>\n",
       "      <td>1.250</td>\n",
       "      <td>17315.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1067178</th>\n",
       "      <td>C581569</td>\n",
       "      <td>20979</td>\n",
       "      <td>36 PENCILS TUBE RED RETROSPOT</td>\n",
       "      <td>-5.0</td>\n",
       "      <td>2011-12-09 11:58:00</td>\n",
       "      <td>1.250</td>\n",
       "      <td>17315.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>22950 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        InvoiceNo StockCode                       Description  Quantity  \\\n",
       "178       C489449     22087          PAPER BUNTING WHITE LACE     -12.0   \n",
       "179       C489449    85206A      CREAM FELT EASTER EGG BASKET      -6.0   \n",
       "180       C489449     21895     POTTING SHED SOW 'N' GROW SET      -4.0   \n",
       "181       C489449     21896                POTTING SHED TWINE      -6.0   \n",
       "182       C489449     22083        PAPER CHAIN KIT RETRO SPOT     -12.0   \n",
       "...           ...       ...                               ...       ...   \n",
       "1065910   C581490     23144   ZINC T-LIGHT HOLDER STARS SMALL     -11.0   \n",
       "1067002   C581499         M                            Manual      -1.0   \n",
       "1067176   C581568     21258        VICTORIAN SEWING BOX LARGE      -5.0   \n",
       "1067177   C581569     84978  HANGING HEART JAR T-LIGHT HOLDER      -1.0   \n",
       "1067178   C581569     20979     36 PENCILS TUBE RED RETROSPOT      -5.0   \n",
       "\n",
       "                 InvoiceDate  UnitPrice  CustomerID         Country  \n",
       "178      2009-12-01 10:33:00      2.950     16321.0       Australia  \n",
       "179      2009-12-01 10:33:00      1.650     16321.0       Australia  \n",
       "180      2009-12-01 10:33:00      4.250     16321.0       Australia  \n",
       "181      2009-12-01 10:33:00      2.100     16321.0       Australia  \n",
       "182      2009-12-01 10:33:00      2.950     16321.0       Australia  \n",
       "...                      ...        ...         ...             ...  \n",
       "1065910  2011-12-09 09:57:00      0.830     14397.0  United Kingdom  \n",
       "1067002  2011-12-09 10:28:00     44.685     15498.0  United Kingdom  \n",
       "1067176  2011-12-09 11:57:00     10.950     15311.0  United Kingdom  \n",
       "1067177  2011-12-09 11:58:00      1.250     17315.0  United Kingdom  \n",
       "1067178  2011-12-09 11:58:00      1.250     17315.0  United Kingdom  \n",
       "\n",
       "[22950 rows x 8 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['Quantity'] < 0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6a18e851",
   "metadata": {},
   "source": [
    "The rows with Quantity < 0 are the cancelled orders and hence can drop these orders"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "fbfdee73",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Quantity</th>\n",
       "      <td>1041671.0</td>\n",
       "      <td>9.675247</td>\n",
       "      <td>22.430168</td>\n",
       "      <td>1.000</td>\n",
       "      <td>1.00</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.00</td>\n",
       "      <td>254.500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>UnitPrice</th>\n",
       "      <td>1041671.0</td>\n",
       "      <td>3.415098</td>\n",
       "      <td>4.070408</td>\n",
       "      <td>0.001</td>\n",
       "      <td>1.25</td>\n",
       "      <td>2.1</td>\n",
       "      <td>4.13</td>\n",
       "      <td>44.685</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CustomerID</th>\n",
       "      <td>805549.0</td>\n",
       "      <td>15331.954970</td>\n",
       "      <td>1696.737039</td>\n",
       "      <td>12346.000</td>\n",
       "      <td>13982.00</td>\n",
       "      <td>15271.0</td>\n",
       "      <td>16805.00</td>\n",
       "      <td>18287.000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                count          mean          std        min       25%  \\\n",
       "Quantity    1041671.0      9.675247    22.430168      1.000      1.00   \n",
       "UnitPrice   1041671.0      3.415098     4.070408      0.001      1.25   \n",
       "CustomerID   805549.0  15331.954970  1696.737039  12346.000  13982.00   \n",
       "\n",
       "                50%       75%        max  \n",
       "Quantity        3.0     10.00    254.500  \n",
       "UnitPrice       2.1      4.13     44.685  \n",
       "CustomerID  15271.0  16805.00  18287.000  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_dropped_negatives = df.copy()\n",
    "df_dropped_negatives = df_dropped_negatives [df_dropped_negatives['Quantity'] > 0]\n",
    "df_dropped_negatives = df_dropped_negatives [df_dropped_negatives['UnitPrice'] > 0]\n",
    "df_dropped_negatives.describe().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "4fbfa733",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Quantity'>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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6i/rfzpeZf2rd31pOz/S+tP5mpan9afLZ555ZlQqlTjzzDPrlqf9SaX9T7dP25P2L21/Oh5lJk+eHJVKJSZPnly3/lTZ8UmVjUc6fxrdXzp+Zf1Py8vOr7L+ll0fyvpTdvzLlJ2v6flSb/zazo9Gz59Gxz9tb3q/TZWd32XHL5WWp+0vU3Z9TJXN//T+mB6vVNrfsvFp9HiU9bfR61uZsvFv9Hg3ev43Oj9S6evb9u4XjZ5nezJBDexhWlpaCv/urObm5sK/qc2bNxf+bbT8jTfeiIiIjRs3RkTEa6+9FhER69evj4iINWvWRETEH//4x7rbv/jiixER8fzzz9dd/7nnnouIiP/+7/+uu/2f//zniIh2X6il+0/3993vfjciIpYuXVp3+1deeSUiIv7whz/ULX/44YcjIuLBBx+MiIhf/vKXERHxi1/8ou76afnNN98cERH/8A//EBHbj/cdd9wRERFf+tKX6u5v9erVERHx+9//PiIili9fHhERy5Yti4iIn/zkJxER8aMf/aju9un4pOOR1p+OX+sLjieeeKLu/tP2pP29++67IyLiq1/9at32/vznP4+IiKeffrru/tP2ptun9aXS8rS+m266Kd5444246aabImL78z3dPh2vz3/+89HS0hI33nhj3frT86fs/EyPd1n7y9qT1p/W98ADD8SvfvWreOCBB+q2P10/3X86funxSa936fWjrP60/+n8StuTlqftS5fT7dP60vXT8UzHv+z8Kau/rP/peJX1r+z6ktafzte0PK0/Xd66dWvh37S8bL6m0u3T9qT9S9ufjkeZbdu2Ff5t9PwsW79sPNL50+j+UmX9T8vLzq+y/pZdH8ra22j/UmXna3q+7Oz4lSnbPm1v2f227PwuO367u3/p9TFVNv/T+2PZ9Svtb9n4NHo8yvq7s9e3RjV6vBs9/xudH6n09W1794uepKlarVbrFWzZsiVWrlwZo0ePjn79+nV1u3baU089FX/9138dEW+9Q/XG5uYY/P/OrLvuGy+89YvCvgef0iVte+OF5fH/jTwwbrjhhi6pb3e76qqrIiLihhtu6BHpJvloamqKdi5hO6R37961F9gREfvvv3/tF8JdYejQobF27dpOr//2t7+99gt3vfb16tUr3nzzzU7vr3///oVArdH2DBw4sPYLZETE6NGjY+XKlbXlYcOG1YK0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dLnLL788Wlpa4p577on9998/mpub46tf/WpMnz49HnnkkRg0aNAure+pp56KQw89NCIizjnnnLo/BwDIgaAGAOhSzz77bPz0pz+NZcuWxYABAyIiok+fPjFnzpx4+umn4/7774/7778/br311jjiiCMiIuLkk0+uLd9xxx2xfPny2Lx5c2zatCmuvPLKGDduXHzhC1+I1atXx5o1a2L16tVx4IEHxuLFi2PFihXx+OOPxw9+8IPo379/rF27NtatWxfvec97Cj+/++674xOf+ESccMIJERFx9dVXx2GHHRbnnXdet40VANDz+I4aAKBLPf300zF69OhaSNPWCSecEE8//XS7265evTqefPLJ+PrXvx5Lly6NSy+9NJYsWVIr/9nPfha33nprPProozFgwIB44IEHYty4cXHyySfH7NmzCx9xSn9+zjnnxIMPPhgRERs2bIjHH388Jk+evAt7DgBQzhM1AEBWqtVqu2UjRoyIRYsWxdKlS+OFF16IFStWxMaNG2vlxx57bO1jU+9+97tj/fr1na53ypQpcdttt8XatWvj0UcfjQ984AOx33777XhHAAB2gCdqAIAudcwxx8QvfvGL2LRpU0REbN26NdatWxcRET/60Y/iqKOOiohiYLN169aIiPjlL38ZZ599dmzYsCFOOOGEuOCCCwr77t+/f+3/m5qaOgx9Uvvtt1+cfvrp8Z3vfCceeeSRwnfZAAB0FUENANCljjzyyDjuuONi4cKFsX79+njppZdixowZcfHFF8evf/3rmDFjRgwdOjRWrlwZERE//vGPY82aNRER8dOf/jRGjx4df/d3fxfHHntsLF++PN58883SOnv16hXbtm0r/fmMGTPi7rvvjmq1GkceeeQu6jEAQOf56BMA0OUWL14cd911V5x77rkREdHc3By9evWKgQMHxvLly2PBggXxyU9+Mr7xjW/EqFGjYtSoURERMXHixHjsscdi/Pjx0dLSEieddFKsX78+NmzY0GF9Y8eOjRtvvLHDn3/kIx+Jww8/PPbff/+YPn36Lu4xAEDnNFUbeSYYAGA3eu2112LlypXx3ve+t1vqf/HFF2PmzJm1LyMGAOhqghoAgIi49dZb48EHH4xPfepTceqpp3Z3cwCAHkpQAwAAAJAJXyYMAAAAkAlBDQAAAEAmBDUAAAAAmRDUAAAAAGRCUAMAAACQCUENAAAAQCb+f49iupSiFKUiAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 1440x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.set(rc={'figure.figsize':(20,4)})\n",
    "\n",
    "sns.set(style='whitegrid')\n",
    "sns.boxplot(df_dropped_negatives['Quantity'],\n",
    "                data=df_dropped_negatives)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "d62f783c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='UnitPrice'>"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.set(rc={'figure.figsize':(20,4)})\n",
    "\n",
    "sns.set(style='whitegrid')\n",
    "sns.boxplot(df_dropped_negatives['UnitPrice'],\n",
    "                data=df_dropped_negatives)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "e6bb7342",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "bins = np.arange(0, 21, 2)\n",
    "ticks = np.arange(0, 21, 2)\n",
    "plt.hist(data=df_dropped_negatives, x='UnitPrice', bins=bins, color='dodgerblue')\n",
    "plt.xticks(ticks, ticks)\n",
    "plt.xlabel('Unit price', fontsize=14)\n",
    "plt.ylabel('Count', fontsize=14)\n",
    "plt.title('Unit price distribution', fontsize=16);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "0ad874c4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "bins = np.arange(0, 110, 10)\n",
    "ticks = np.arange(0, 110, 10)\n",
    "plt.hist(data=df_dropped_negatives, x='Quantity', bins=bins, color='dodgerblue')\n",
    "plt.xticks(ticks, ticks)\n",
    "plt.xlabel('Quantity', fontsize=14)\n",
    "plt.ylabel('Count', fontsize=14)\n",
    "plt.title('Distribution of quantity of products', fontsize=16);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "72c3aa66",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Drop the rows with CustomerID blank\n",
    "\n",
    "df_dropped_negatives.dropna(subset=['CustomerID'], inplace=True)\n",
    "df_dropped_negatives['CustomerID'].isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "6c28fe03",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 805549 entries, 0 to 1067370\n",
      "Data columns (total 8 columns):\n",
      " #   Column       Non-Null Count   Dtype  \n",
      "---  ------       --------------   -----  \n",
      " 0   InvoiceNo    805549 non-null  object \n",
      " 1   StockCode    805549 non-null  object \n",
      " 2   Description  805549 non-null  object \n",
      " 3   Quantity     805549 non-null  float64\n",
      " 4   InvoiceDate  805549 non-null  object \n",
      " 5   UnitPrice    805549 non-null  float64\n",
      " 6   CustomerID   805549 non-null  float64\n",
      " 7   Country      805549 non-null  object \n",
      "dtypes: float64(3), object(5)\n",
      "memory usage: 55.3+ MB\n"
     ]
    }
   ],
   "source": [
    "df_dropped_negatives.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "62be808d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>InvoiceDate</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "      <th>Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>489434</td>\n",
       "      <td>85048</td>\n",
       "      <td>15CM CHRISTMAS GLASS BALL 20 LIGHTS</td>\n",
       "      <td>12.0</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>6.95</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>83.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>489434</td>\n",
       "      <td>79323P</td>\n",
       "      <td>PINK CHERRY LIGHTS</td>\n",
       "      <td>12.0</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>6.75</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>81.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>489434</td>\n",
       "      <td>79323W</td>\n",
       "      <td>WHITE CHERRY LIGHTS</td>\n",
       "      <td>12.0</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>6.75</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>81.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>489434</td>\n",
       "      <td>22041</td>\n",
       "      <td>RECORD FRAME 7\" SINGLE SIZE</td>\n",
       "      <td>48.0</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>2.10</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>100.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>489434</td>\n",
       "      <td>21232</td>\n",
       "      <td>STRAWBERRY CERAMIC TRINKET BOX</td>\n",
       "      <td>24.0</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>1.25</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>30.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1067366</th>\n",
       "      <td>581587</td>\n",
       "      <td>22899</td>\n",
       "      <td>CHILDREN'S APRON DOLLY GIRL</td>\n",
       "      <td>6.0</td>\n",
       "      <td>2011-12-09 12:50:00</td>\n",
       "      <td>2.10</td>\n",
       "      <td>12680.0</td>\n",
       "      <td>France</td>\n",
       "      <td>12.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1067367</th>\n",
       "      <td>581587</td>\n",
       "      <td>23254</td>\n",
       "      <td>CHILDRENS CUTLERY DOLLY GIRL</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2011-12-09 12:50:00</td>\n",
       "      <td>4.15</td>\n",
       "      <td>12680.0</td>\n",
       "      <td>France</td>\n",
       "      <td>16.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1067368</th>\n",
       "      <td>581587</td>\n",
       "      <td>23255</td>\n",
       "      <td>CHILDRENS CUTLERY CIRCUS PARADE</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2011-12-09 12:50:00</td>\n",
       "      <td>4.15</td>\n",
       "      <td>12680.0</td>\n",
       "      <td>France</td>\n",
       "      <td>16.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1067369</th>\n",
       "      <td>581587</td>\n",
       "      <td>22138</td>\n",
       "      <td>BAKING SET 9 PIECE RETROSPOT</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2011-12-09 12:50:00</td>\n",
       "      <td>4.95</td>\n",
       "      <td>12680.0</td>\n",
       "      <td>France</td>\n",
       "      <td>14.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1067370</th>\n",
       "      <td>581587</td>\n",
       "      <td>POST</td>\n",
       "      <td>POSTAGE</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2011-12-09 12:50:00</td>\n",
       "      <td>18.00</td>\n",
       "      <td>12680.0</td>\n",
       "      <td>France</td>\n",
       "      <td>18.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>805549 rows Ã— 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        InvoiceNo StockCode                          Description  Quantity  \\\n",
       "0          489434     85048  15CM CHRISTMAS GLASS BALL 20 LIGHTS      12.0   \n",
       "1          489434    79323P                   PINK CHERRY LIGHTS      12.0   \n",
       "2          489434    79323W                  WHITE CHERRY LIGHTS      12.0   \n",
       "3          489434     22041         RECORD FRAME 7\" SINGLE SIZE       48.0   \n",
       "4          489434     21232       STRAWBERRY CERAMIC TRINKET BOX      24.0   \n",
       "...           ...       ...                                  ...       ...   \n",
       "1067366    581587     22899         CHILDREN'S APRON DOLLY GIRL        6.0   \n",
       "1067367    581587     23254        CHILDRENS CUTLERY DOLLY GIRL        4.0   \n",
       "1067368    581587     23255      CHILDRENS CUTLERY CIRCUS PARADE       4.0   \n",
       "1067369    581587     22138        BAKING SET 9 PIECE RETROSPOT        3.0   \n",
       "1067370    581587      POST                              POSTAGE       1.0   \n",
       "\n",
       "                 InvoiceDate  UnitPrice  CustomerID         Country   Sales  \n",
       "0        2009-12-01 07:45:00       6.95     13085.0  United Kingdom   83.40  \n",
       "1        2009-12-01 07:45:00       6.75     13085.0  United Kingdom   81.00  \n",
       "2        2009-12-01 07:45:00       6.75     13085.0  United Kingdom   81.00  \n",
       "3        2009-12-01 07:45:00       2.10     13085.0  United Kingdom  100.80  \n",
       "4        2009-12-01 07:45:00       1.25     13085.0  United Kingdom   30.00  \n",
       "...                      ...        ...         ...             ...     ...  \n",
       "1067366  2011-12-09 12:50:00       2.10     12680.0          France   12.60  \n",
       "1067367  2011-12-09 12:50:00       4.15     12680.0          France   16.60  \n",
       "1067368  2011-12-09 12:50:00       4.15     12680.0          France   16.60  \n",
       "1067369  2011-12-09 12:50:00       4.95     12680.0          France   14.85  \n",
       "1067370  2011-12-09 12:50:00      18.00     12680.0          France   18.00  \n",
       "\n",
       "[805549 rows x 9 columns]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Calculate Total Sales Column\n",
    "\n",
    "df_dropped_negatives['Sales'] = df_dropped_negatives['Quantity'] * df_dropped_negatives['UnitPrice']\n",
    "df_dropped_negatives"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "566d1087",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>InvoiceDate</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "      <th>Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>489434</td>\n",
       "      <td>85048</td>\n",
       "      <td>15CM CHRISTMAS GLASS BALL 20 LIGHTS</td>\n",
       "      <td>12.0</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>6.95</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>83.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>489434</td>\n",
       "      <td>79323P</td>\n",
       "      <td>PINK CHERRY LIGHTS</td>\n",
       "      <td>12.0</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>6.75</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>81.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>489434</td>\n",
       "      <td>79323W</td>\n",
       "      <td>WHITE CHERRY LIGHTS</td>\n",
       "      <td>12.0</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>6.75</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>81.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>489434</td>\n",
       "      <td>22041</td>\n",
       "      <td>RECORD FRAME 7\" SINGLE SIZE</td>\n",
       "      <td>48.0</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>2.10</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>100.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>489434</td>\n",
       "      <td>21232</td>\n",
       "      <td>STRAWBERRY CERAMIC TRINKET BOX</td>\n",
       "      <td>24.0</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>1.25</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>30.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1067366</th>\n",
       "      <td>581587</td>\n",
       "      <td>22899</td>\n",
       "      <td>CHILDREN'S APRON DOLLY GIRL</td>\n",
       "      <td>6.0</td>\n",
       "      <td>2011-12-09 12:50:00</td>\n",
       "      <td>2.10</td>\n",
       "      <td>12680.0</td>\n",
       "      <td>France</td>\n",
       "      <td>12.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1067367</th>\n",
       "      <td>581587</td>\n",
       "      <td>23254</td>\n",
       "      <td>CHILDRENS CUTLERY DOLLY GIRL</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2011-12-09 12:50:00</td>\n",
       "      <td>4.15</td>\n",
       "      <td>12680.0</td>\n",
       "      <td>France</td>\n",
       "      <td>16.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1067368</th>\n",
       "      <td>581587</td>\n",
       "      <td>23255</td>\n",
       "      <td>CHILDRENS CUTLERY CIRCUS PARADE</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2011-12-09 12:50:00</td>\n",
       "      <td>4.15</td>\n",
       "      <td>12680.0</td>\n",
       "      <td>France</td>\n",
       "      <td>16.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1067369</th>\n",
       "      <td>581587</td>\n",
       "      <td>22138</td>\n",
       "      <td>BAKING SET 9 PIECE RETROSPOT</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2011-12-09 12:50:00</td>\n",
       "      <td>4.95</td>\n",
       "      <td>12680.0</td>\n",
       "      <td>France</td>\n",
       "      <td>14.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1067370</th>\n",
       "      <td>581587</td>\n",
       "      <td>POST</td>\n",
       "      <td>POSTAGE</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2011-12-09 12:50:00</td>\n",
       "      <td>18.00</td>\n",
       "      <td>12680.0</td>\n",
       "      <td>France</td>\n",
       "      <td>18.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>805549 rows Ã— 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        InvoiceNo StockCode                          Description  Quantity  \\\n",
       "0          489434     85048  15CM CHRISTMAS GLASS BALL 20 LIGHTS      12.0   \n",
       "1          489434    79323P                   PINK CHERRY LIGHTS      12.0   \n",
       "2          489434    79323W                  WHITE CHERRY LIGHTS      12.0   \n",
       "3          489434     22041         RECORD FRAME 7\" SINGLE SIZE       48.0   \n",
       "4          489434     21232       STRAWBERRY CERAMIC TRINKET BOX      24.0   \n",
       "...           ...       ...                                  ...       ...   \n",
       "1067366    581587     22899         CHILDREN'S APRON DOLLY GIRL        6.0   \n",
       "1067367    581587     23254        CHILDRENS CUTLERY DOLLY GIRL        4.0   \n",
       "1067368    581587     23255      CHILDRENS CUTLERY CIRCUS PARADE       4.0   \n",
       "1067369    581587     22138        BAKING SET 9 PIECE RETROSPOT        3.0   \n",
       "1067370    581587      POST                              POSTAGE       1.0   \n",
       "\n",
       "                InvoiceDate  UnitPrice  CustomerID         Country   Sales  \n",
       "0       2009-12-01 07:45:00       6.95     13085.0  United Kingdom   83.40  \n",
       "1       2009-12-01 07:45:00       6.75     13085.0  United Kingdom   81.00  \n",
       "2       2009-12-01 07:45:00       6.75     13085.0  United Kingdom   81.00  \n",
       "3       2009-12-01 07:45:00       2.10     13085.0  United Kingdom  100.80  \n",
       "4       2009-12-01 07:45:00       1.25     13085.0  United Kingdom   30.00  \n",
       "...                     ...        ...         ...             ...     ...  \n",
       "1067366 2011-12-09 12:50:00       2.10     12680.0          France   12.60  \n",
       "1067367 2011-12-09 12:50:00       4.15     12680.0          France   16.60  \n",
       "1067368 2011-12-09 12:50:00       4.15     12680.0          France   16.60  \n",
       "1067369 2011-12-09 12:50:00       4.95     12680.0          France   14.85  \n",
       "1067370 2011-12-09 12:50:00      18.00     12680.0          France   18.00  \n",
       "\n",
       "[805549 rows x 9 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Convert the Date and Time Object into Pd Date and time field\n",
    "df_dropped_negatives['InvoiceDate'] = pd.to_datetime(df_dropped_negatives['InvoiceDate'], format='%Y-%m-%d %H:%M:%S')\n",
    "\n",
    "df_dropped_negatives\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "4adebd8b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>Sales</th>\n",
       "      <th>InvoiceDate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>491725</td>\n",
       "      <td>45.00</td>\n",
       "      <td>2009-12-14 08:34:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>491742</td>\n",
       "      <td>22.50</td>\n",
       "      <td>2009-12-14 11:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>491744</td>\n",
       "      <td>22.50</td>\n",
       "      <td>2009-12-14 11:02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>492718</td>\n",
       "      <td>22.50</td>\n",
       "      <td>2009-12-18 10:47:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>492722</td>\n",
       "      <td>1.00</td>\n",
       "      <td>2009-12-18 10:55:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>493410</td>\n",
       "      <td>22.50</td>\n",
       "      <td>2010-01-04 09:24:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>493412</td>\n",
       "      <td>22.50</td>\n",
       "      <td>2010-01-04 09:53:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>494450</td>\n",
       "      <td>22.50</td>\n",
       "      <td>2010-01-14 13:50:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>495295</td>\n",
       "      <td>22.50</td>\n",
       "      <td>2010-01-22 13:30:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>499763</td>\n",
       "      <td>27.05</td>\n",
       "      <td>2010-03-02 13:08:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>513774</td>\n",
       "      <td>142.31</td>\n",
       "      <td>2010-06-28 13:53:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>541431</td>\n",
       "      <td>264.68</td>\n",
       "      <td>2011-01-18 10:01:00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    CustomerID InvoiceNo   Sales         InvoiceDate\n",
       "0      12346.0    491725   45.00 2009-12-14 08:34:00\n",
       "1      12346.0    491742   22.50 2009-12-14 11:00:00\n",
       "2      12346.0    491744   22.50 2009-12-14 11:02:00\n",
       "3      12346.0    492718   22.50 2009-12-18 10:47:00\n",
       "4      12346.0    492722    1.00 2009-12-18 10:55:00\n",
       "5      12346.0    493410   22.50 2010-01-04 09:24:00\n",
       "6      12346.0    493412   22.50 2010-01-04 09:53:00\n",
       "7      12346.0    494450   22.50 2010-01-14 13:50:00\n",
       "8      12346.0    495295   22.50 2010-01-22 13:30:00\n",
       "9      12346.0    499763   27.05 2010-03-02 13:08:00\n",
       "10     12346.0    513774  142.31 2010-06-28 13:53:00\n",
       "11     12346.0    541431  264.68 2011-01-18 10:01:00"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_orders = df_dropped_negatives.groupby(['CustomerID', 'InvoiceNo']).agg({'Sales': sum, 'InvoiceDate': max})\n",
    "a = df_orders.reset_index()\n",
    "a[a['CustomerID']==12346.0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "929d84d3",
   "metadata": {},
   "source": [
    "# EDA"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dc02d15b",
   "metadata": {},
   "source": [
    "In order to predict and calculate CLTV, we have to estimate the **frequency**, **recency**, and **total amount** of purchases by each customer. We are going to determine basic information about each customer's average and lifetime purchase amount, as well as each customer's duration and frequency of purchase.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "61166ef4",
   "metadata": {},
   "outputs": [],
   "source": [
    "def groupby_mean(x):\n",
    "    return x.mean()\n",
    "\n",
    "def groupby_count(x):\n",
    "    return x.count()\n",
    "\n",
    "def purchase_duration(x):\n",
    "    return (x.max() - x.min()).days\n",
    "\n",
    "def avg_frequency(x):\n",
    "    return (x.max() - x.min()).days / x.count()\n",
    "\n",
    "groupby_mean.__name__ = 'avg'\n",
    "groupby_count.__name__ = 'count'\n",
    "purchase_duration.__name__ = 'purchase_duration'\n",
    "avg_frequency.__name__ = 'purchase_frequency'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "4b12e8ab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sales_min</th>\n",
       "      <th>sales_max</th>\n",
       "      <th>sales_sum</th>\n",
       "      <th>sales_avg</th>\n",
       "      <th>sales_count</th>\n",
       "      <th>invoicedate_min</th>\n",
       "      <th>invoicedate_max</th>\n",
       "      <th>invoicedate_purchase_duration</th>\n",
       "      <th>invoicedate_purchase_frequency</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CustomerID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12346.0</th>\n",
       "      <td>1.000</td>\n",
       "      <td>264.680</td>\n",
       "      <td>637.540</td>\n",
       "      <td>53.128333</td>\n",
       "      <td>12</td>\n",
       "      <td>2009-12-14 08:34:00</td>\n",
       "      <td>2011-01-18 10:01:00</td>\n",
       "      <td>400</td>\n",
       "      <td>33.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12347.0</th>\n",
       "      <td>224.820</td>\n",
       "      <td>1423.580</td>\n",
       "      <td>5633.320</td>\n",
       "      <td>704.165000</td>\n",
       "      <td>8</td>\n",
       "      <td>2010-10-31 14:20:00</td>\n",
       "      <td>2011-12-07 15:52:00</td>\n",
       "      <td>402</td>\n",
       "      <td>50.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12348.0</th>\n",
       "      <td>222.160</td>\n",
       "      <td>892.800</td>\n",
       "      <td>2019.400</td>\n",
       "      <td>403.880000</td>\n",
       "      <td>5</td>\n",
       "      <td>2010-09-27 14:59:00</td>\n",
       "      <td>2011-09-25 13:13:00</td>\n",
       "      <td>362</td>\n",
       "      <td>72.400000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12349.0</th>\n",
       "      <td>44.685</td>\n",
       "      <td>1502.235</td>\n",
       "      <td>3812.745</td>\n",
       "      <td>953.186250</td>\n",
       "      <td>4</td>\n",
       "      <td>2010-04-29 13:20:00</td>\n",
       "      <td>2011-11-21 09:51:00</td>\n",
       "      <td>570</td>\n",
       "      <td>142.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12352.0</th>\n",
       "      <td>120.330</td>\n",
       "      <td>366.250</td>\n",
       "      <td>2143.595</td>\n",
       "      <td>214.359500</td>\n",
       "      <td>10</td>\n",
       "      <td>2010-11-12 10:20:00</td>\n",
       "      <td>2011-11-03 14:37:00</td>\n",
       "      <td>356</td>\n",
       "      <td>35.600000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18281.0</th>\n",
       "      <td>80.820</td>\n",
       "      <td>120.320</td>\n",
       "      <td>201.140</td>\n",
       "      <td>100.570000</td>\n",
       "      <td>2</td>\n",
       "      <td>2010-05-11 10:49:00</td>\n",
       "      <td>2011-06-12 10:53:00</td>\n",
       "      <td>397</td>\n",
       "      <td>198.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18282.0</th>\n",
       "      <td>77.840</td>\n",
       "      <td>100.210</td>\n",
       "      <td>178.050</td>\n",
       "      <td>89.025000</td>\n",
       "      <td>2</td>\n",
       "      <td>2011-08-05 13:35:00</td>\n",
       "      <td>2011-12-02 11:43:00</td>\n",
       "      <td>118</td>\n",
       "      <td>59.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18283.0</th>\n",
       "      <td>1.950</td>\n",
       "      <td>313.650</td>\n",
       "      <td>2736.650</td>\n",
       "      <td>124.393182</td>\n",
       "      <td>22</td>\n",
       "      <td>2010-02-19 17:16:00</td>\n",
       "      <td>2011-12-06 12:02:00</td>\n",
       "      <td>654</td>\n",
       "      <td>29.727273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18286.0</th>\n",
       "      <td>457.635</td>\n",
       "      <td>833.480</td>\n",
       "      <td>1291.115</td>\n",
       "      <td>645.557500</td>\n",
       "      <td>2</td>\n",
       "      <td>2009-12-16 10:45:00</td>\n",
       "      <td>2010-08-20 11:57:00</td>\n",
       "      <td>247</td>\n",
       "      <td>123.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18287.0</th>\n",
       "      <td>30.600</td>\n",
       "      <td>1071.610</td>\n",
       "      <td>4177.675</td>\n",
       "      <td>596.810714</td>\n",
       "      <td>7</td>\n",
       "      <td>2010-05-17 11:55:00</td>\n",
       "      <td>2011-10-28 09:29:00</td>\n",
       "      <td>528</td>\n",
       "      <td>75.428571</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4181 rows Ã— 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            sales_min  sales_max  sales_sum   sales_avg  sales_count  \\\n",
       "CustomerID                                                             \n",
       "12346.0         1.000    264.680    637.540   53.128333           12   \n",
       "12347.0       224.820   1423.580   5633.320  704.165000            8   \n",
       "12348.0       222.160    892.800   2019.400  403.880000            5   \n",
       "12349.0        44.685   1502.235   3812.745  953.186250            4   \n",
       "12352.0       120.330    366.250   2143.595  214.359500           10   \n",
       "...               ...        ...        ...         ...          ...   \n",
       "18281.0        80.820    120.320    201.140  100.570000            2   \n",
       "18282.0        77.840    100.210    178.050   89.025000            2   \n",
       "18283.0         1.950    313.650   2736.650  124.393182           22   \n",
       "18286.0       457.635    833.480   1291.115  645.557500            2   \n",
       "18287.0        30.600   1071.610   4177.675  596.810714            7   \n",
       "\n",
       "               invoicedate_min     invoicedate_max  \\\n",
       "CustomerID                                           \n",
       "12346.0    2009-12-14 08:34:00 2011-01-18 10:01:00   \n",
       "12347.0    2010-10-31 14:20:00 2011-12-07 15:52:00   \n",
       "12348.0    2010-09-27 14:59:00 2011-09-25 13:13:00   \n",
       "12349.0    2010-04-29 13:20:00 2011-11-21 09:51:00   \n",
       "12352.0    2010-11-12 10:20:00 2011-11-03 14:37:00   \n",
       "...                        ...                 ...   \n",
       "18281.0    2010-05-11 10:49:00 2011-06-12 10:53:00   \n",
       "18282.0    2011-08-05 13:35:00 2011-12-02 11:43:00   \n",
       "18283.0    2010-02-19 17:16:00 2011-12-06 12:02:00   \n",
       "18286.0    2009-12-16 10:45:00 2010-08-20 11:57:00   \n",
       "18287.0    2010-05-17 11:55:00 2011-10-28 09:29:00   \n",
       "\n",
       "            invoicedate_purchase_duration  invoicedate_purchase_frequency  \n",
       "CustomerID                                                                 \n",
       "12346.0                               400                       33.333333  \n",
       "12347.0                               402                       50.250000  \n",
       "12348.0                               362                       72.400000  \n",
       "12349.0                               570                      142.500000  \n",
       "12352.0                               356                       35.600000  \n",
       "...                                   ...                             ...  \n",
       "18281.0                               397                      198.500000  \n",
       "18282.0                               118                       59.000000  \n",
       "18283.0                               654                       29.727273  \n",
       "18286.0                               247                      123.500000  \n",
       "18287.0                               528                       75.428571  \n",
       "\n",
       "[4181 rows x 9 columns]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Get Customer Level Sales and time metrics\n",
    "\n",
    "df_summary = df_orders.reset_index().groupby('CustomerID').agg({\n",
    "            'Sales': [min, max, sum, groupby_mean, groupby_count],\n",
    "            'InvoiceDate': [min, max, purchase_duration, avg_frequency]\n",
    "             })\n",
    "# Rename Columns post Group By\n",
    "df_summary.columns = ['_'.join(col).lower() for col in df_summary.columns]\n",
    "\n",
    "# Select Customers who have atleast 2 transactions \n",
    "df_summary = df_summary.loc[df_summary['invoicedate_purchase_duration'] > 0]\n",
    "\n",
    "df_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "61697deb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Let's look at the number of purchases\n",
    "ax = df_summary.groupby('sales_count').count()['sales_avg'][:20].plot(\n",
    "        kind='bar', \n",
    "        color='dodgerblue', \n",
    "        figsize=(10,8), \n",
    "        grid=False)\n",
    "plt.xlabel('Sales count', fontsize=14)\n",
    "plt.ylabel('Number of customers', fontsize=14)\n",
    "plt.title('Number of purchases made by repeat customers', fontsize=16);"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "448ad0ad",
   "metadata": {},
   "source": [
    "Most of the repeat customer do 13 or more purchases"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "e052e9f2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = df_summary['invoicedate_purchase_frequency'].hist(\n",
    "        bins=20,\n",
    "        color='dodgerblue',\n",
    "        rwidth=0.7,\n",
    "        figsize=(10,8),\n",
    "        grid=False)\n",
    "plt.xlabel('Avearge number of days between purchases', fontsize=14)\n",
    "plt.ylabel('Number of customers', fontsize=14)\n",
    "plt.title('Frequency of purchases made by repeat customers', fontsize=16);"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "20762e3d",
   "metadata": {},
   "source": [
    "The majority of repeat customers tend to make a purchase every 12 to 60 days\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "a39c15ae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Sales in different Months ')"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_orders_sales_by_time = df_orders.copy()\n",
    "\n",
    "df_orders_sales_by_time[\"year\"] = df_orders_sales_by_time[\"InvoiceDate\"].apply(lambda x: x.year)\n",
    "df_orders_sales_by_time[\"month\"] = df_orders_sales_by_time[\"InvoiceDate\"].apply(lambda x: x.month_name())\n",
    "df_orders_sales_by_time[\"day\"] = df_orders_sales_by_time[\"InvoiceDate\"].apply(lambda x: x.day_name())\n",
    "df_orders_sales_by_time[\"hour\"] = df_orders_sales_by_time[\"InvoiceDate\"].apply(lambda x: x.hour)\n",
    "df_orders_sales_by_time[\"minute\"] = df_orders_sales_by_time[\"InvoiceDate\"].apply(lambda x: x.minute)\n",
    "df_orders_sales_by_time[\"second\"] = df_orders_sales_by_time[\"InvoiceDate\"].apply(lambda x: x.second)\n",
    "\n",
    "SalesbyMonth=df_orders_sales_by_time.groupby(\"month\")['Sales'].sum().reset_index().sort_values('Sales',ascending=False)\n",
    "\n",
    "\n",
    "# Sales different months.\n",
    "plt.figure(figsize=(20,6))\n",
    "sns.barplot(x=SalesbyMonth['month'],y=SalesbyMonth['Sales'])\n",
    "plt.title('Sales in different Months ')\n",
    "                               "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "281298e8",
   "metadata": {},
   "source": [
    "\n",
    "Highest sales happened in the month of November (Eve of Holiday Season) while least sale happened in the month of February\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "554989c2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Sales onn different Days ')"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sales_on_day_basis=df_orders_sales_by_time.groupby('day')['Sales'].sum().reset_index().sort_values('Sales',ascending=False)\n",
    "\n",
    "# Sales on different days.\n",
    "plt.figure(figsize=(20,6))\n",
    "sns.barplot(x=sales_on_day_basis['day'],y=sales_on_day_basis['Sales'])\n",
    "plt.title('Sales onn different Days ')\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "67d63873",
   "metadata": {},
   "source": [
    "Highest Sales are on Thursday's and the lowest on Saturdays"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "2bd4cfb3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 8, 11, 10,  9, 13, 14, 12, 15, 19, 16, 17,  7, 18, 20,  6])"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_orders_sales_by_time['hour'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "3c23a1b1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Sales count in different day timings')"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAtIAAAGECAYAAAAbVcfdAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAAAv/ElEQVR4nO3deVRV9f7/8dcBFAcsrgaoaX3JEhwgzZsR1yHUNA3EOdO0tFArc8gcIfVqaFk3NMt+iXnLwgLNCTMnvDY4JpkzqZUDDoByVXBA4OzfHy7PihzCjxxA7/Oxlmvx2dPnfTZuzosPn7O3zbIsSwAAAABuiEtJFwAAAADcigjSAAAAgAGCNAAAAGCAIA0AAAAYIEgDAAAABgjSAAAAgAGCNIAS9fPPP6tXr14KCwtTaGioXnjhBe3bt+8v9xs1apQ+/vjjYqiw6MybN09xcXFXLE9LS1P37t1v6tgTJkzQ9OnTJUkRERHav3+/JGncuHFq0aKFYmJi9OGHH+qxxx7T6NGjb6qvwti+fbvGjh1bqG0bNmyo1NTUIum3b9++yszMlFTwPBTGjh07NGjQoCKpA8D/BreSLgDA/66LFy+qf//+mj17turVqydJWrx4sSIiIpSUlCRXV9cSrrBoJScn64EHHrhiuY+Pj7788ssi6yc2NtbxdXx8vNauXauqVauqZcuWeuedd/T3v/+9yPq6lv379ystLc3p/fzZunXrHF//8TwURkBAgN57772iLgnAbYwgDaDEnD9/XllZWTp37pxjWfv27eXh4aH8/HzZbDZNmjRJ27Zt09mzZ2VZlt544w01atSowHF+/fVXRUdH69SpU8rPz1evXr3UpUsXnT17VqNHj9bBgwfl4uKievXqacKECXJxKfjHuN9//11jx45VZmamXFxc9OKLL6pdu3bat2+fJkyYoFOnTslms6lv377q0KGDNm3apIkTJ2rp0qWSVKA9ffp0HTlyRBkZGTpy5Ih8fHz09ttva9u2bVqzZo3WrVuncuXKqWfPno7+U1NTFRYWpq1bt15zf29v7wI1Z2dnKzIyUikpKfL29parq6vjvLRo0ULTpk3T5MmTZVmWIiIiVLlyZaWlpSkyMlKDBw9W06ZNFR0drb179yo3N1ePPvqoRowYITc3N9WvX18tW7ZUSkqK3nnnHVWoUOGq53fTpk2KiYlRzZo1tW/fPuXl5emf//ynqlevrvfee09ZWVkaPXq0Jk+eXKD2LVu2aOLEibLZbAoICJDdbpck2e32q36/69Spo+bNmyshIUG+vr6SpOeee07PPPOMWrVq5Tju5ZH2Z599VjNnzlTPnj01bdo0nTt3Tu+++66qVaum33//XeXLl1e/fv302Wef6ffff1fr1q01ZsyYAt/HUaNGycPDQ7/88ouOHz8uPz8/vfXWW6pYsaK+/fZbvfPOO3JxcVGdOnW0fv16zZ07V+7u7ho5cqT++9//SpKaN2+uIUOG3NhFAeDWYt3isrKyrCeffNI6fPjwNbfZvXu31b59e8e/Jk2aWE8++WQxVgngWmbPnm0FBgZaLVq0sF577TVr3rx51rlz5yzLsqyffvrJeuWVV6z8/HzLsizro48+svr3729ZlmWNHDnSmjVrlpWbm2u1a9fO2rlzp2VZlnXmzBmrbdu21tatW62FCxdaffv2tSzLsvLy8qzIyEjrwIEDV9TQoUMH6/PPP7csy7KOHj1qtWzZ0srKyrJatmxprVixwrIsyzp+/LjVtGlT66effrI2btxY4GfIH9vvvfeeY3/Lsqz+/ftb06ZNK1Dznx0+fNhq0KDBX+7/R9HR0daIESMsu91unTx50mrWrJn13nvvWZZlWSEhIdb27dsty7Ks2rVrWydPnrxi+ahRo6w5c+Y4zs1rr71mzZw507HPwoULLcuyrnt+N27caNWpU8favXu3ZVmW9fHHH1s9e/a0LMuyvvrqK6tfv35X1J2Tk2MFBwdb69evtyzLshITE63atWtbhw8fvu73+4033rDeeusty7Is6+DBg1bz5s2tvLy8K45/tdd7uc5du3ZZlmVZzz//vPXUU09ZOTk51smTJ6169epZx48fL/B9HDlypGObixcvWh06dLDmz59vZWZmWo0bN7b27NljWZZlLViwwFH/+++/b73++uuWZVnW2bNnrSFDhlhnzpy5okYAt49bekR627ZtioqK0oEDB667XZ06dbR48WJJl0bAunbtqvHjxzu/QAB/qU+fPuratat+/PFH/fjjj4qNjVVsbKzmz5+vhg0b6s4779SXX36pw4cPa9OmTapYsWKB/Q8cOKBDhw5pzJgxjmUXLlzQ7t271bRpU8XExKhXr14KDg7Ws88+q3vvvbfA/qdOnVJKSoq6du0qSapWrZpWr16t/fv3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e+Tn56cFCxbcdB/h4eE3fQzgdpOamqr69esrPDy8wL+4uLgiOf6OHTsUGRlZJMdCyXDaA1lw+/jqq6/0xBNPKD4+Xm3atJEkLV++XAMHDtRTTz2lUaNGqXHjxiVcJXB78/T01Pfff6/8/Hy5urpKkpYtW6bKlSsXyfEXL15cJMcBbjfe3t5Ouz4CAgIUEBDglGOjeBCkcV25ublKTExUXFycunfvrkOHDmnTpk1KSkrShg0b5OLiojVr1mjjxo3y8vJSnTp1NHbsWB0/flw2m03Dhg1zPOXy559/1rFjx/TMM8/om2++UUBAgJKTk5WZmamoqCg1b95cJ06cUGRkpI4ePSo3NzcNHTpUzZo10/nz5xUVFaVffvlFNptNzz//vDp06KAFCxbo+++/1+nTp3X48GH94x//0Pjx40v6tAFFrmLFivL399ePP/6ooKAgSdK6desUHBwsSfrPf/6jqVOnym63q2bNmpowYYLuuusutWjRQoGBgdqzZ4/efvttjR07Vg888ID27NmjKlWqaNq0afL09JSfn59++eUXTZ8+XWlpaTp48KCOHDmirl276sUXX1Rubq7GjRun5ORk+fj4yGaz6aWXXtIjjzxSkqcFKBFz5szRwYMH9frrr0uS3nzzTVWtWlVdu3bVhAkTtG/fPuXn5ysiIkKhoaHXfK/atGmT3n//fX322Wfq1avXVd8Xjx8/rtdee02nT59W7dq19eOPP+q7774r4TOAywjSuK5vv/1W1atXl6+vr1q1aqX4+HgNHz5cycnJaty4sTp16uT4umnTpho6dKg6d+6sli1bKj09XT169NCiRYskSRcvXtSyZcskSd98841yc3MVHx+vNWvWaNq0aWrevLkmTpyooKAg9enTR4cPH9bTTz+tRYsWafbs2frb3/6mpUuXKjMzU127dpW/v78kaevWrVq6dKlcXV31xBNP6Omnn5afn19JnTLAadq2basVK1YoKChI27dvl5+fnyzL0smTJxUTE6MvvvhCNWrU0KxZszRhwgS99957kqRmzZpp6tSpSk1NVUpKiiZNmqS6devqlVdeUWJionr16lWgn19++UVxcXHKyspSq1at1LNnTy1evFjnz5/X8uXLdfToUYWFhZXEKQCKXXp6+hVTn15//XXNmjVLY8aMkYuLi1auXKn4+Hh9+OGHqlevnt566y1lZ2ere/fuevDBByVd/b3qz672vhgdHa22bduqZ8+eWrVqFVMpSxmCNK7rq6++UmhoqCSpXbt2eu211zR48OBrbr9+/Xr99ttvjjfwvLw8HT58WJIUGBhYYNumTZtKkh544AGdOnVKkrRx40a98cYbkqSaNWvqwQcf1LZt27Rx40ZNmjRJklS5cmW1bNlSmzdvloeHhxo2bCgPDw/HPqdPny6iVw+ULi1atHCMOn/zzTdq27atli1bpvLlyyswMFA1atSQJD311FOaOXOmY7/Lb+SSVKVKFdWtW1fSpWvvatfLI488orJly6pKlSry9PRUVlaW1q1bp27duslms+nuu+/Wo48+6uRXC5QO15ra4e/vr02bNqlMmTLy9fWVl5eX1q9frwsXLuirr76SJJ07d0779u2TpEK9V13tfXHdunWaPHmyJOnxxx/XHXfcUeSvEeYI0rimkydP6vvvv9euXbs0Z84cWZalM2fOaNWqVdfcx26369NPP5Wnp6ekS7/JV6lSRatXr1a5cuUKbOvu7i5JstlsjmV/fmK9ZVnKz8+/5vI/HufysXjqPW5Xl6d3JCcna+PGjRo2bJiWLVsmu91eYDvLspSXl+do//EaKcz1crVtXF1dr+gH+F8WHh6uZcuWqUyZMo6/0Njtdr399tuqV6+eJOnEiRO68847lZiYeEPX3h/fF11dXXlfK8W4aweuafHixQoKCtJ3332nNWvW6D//+Y8GDBigL7/8ssB2rq6ujlAbFBSkuXPnSpL279+vsLAwnT9/vtB9BgUFaf78+ZKkw4cP66efflKDBg0KLM/MzFRSUhIfcMT/pLZt2+pf//qX6tevLze3S2MhFy5c0LZt25SamipJio+PL/K5y8HBwVq2bJksy1JaWpo2b95c4M0e+F/TsmVL/fjjj1q3bp0ef/xxSZfew7744gtJlwaS2rdvr2PHjt1UP48++qgSExMlXZpueebMmZsrHEWKEWlc08KFCzV06NACy3r27KlZs2bprrvuciwLDg7Wu+++q0qVKikqKkpjx451/HY+ZcoUx5+yCiMyMlJjx4513M7rjTfekLe3t15++WWNHz9eYWFhys/P14ABA1SvXj398ssvRfBKgVtHSEiIIiMjC0yxuuuuuzRhwgQNHDhQubm5ql69uqKjo4u0327duiklJUVhYWHy8vJS9erVr/grE3A7utoc6YcfflhRUVF66KGHdPHiRVWsWFGSNHDgQI0fP16hoaHKz8/X8OHDdc8992jLli3G/UdGRmrkyJFKSEiQv78/UztKGZvF3wsAAH9h7dq1sixLISEhysrKUocOHfTVV185pnEBcI45c+YoODhY999/v3bt2qXXX3+9SO4dj6LBiDQA4C/VqlVLI0aM0NSpUyVJgwYNIkQDxeDee+/Vq6++KhcXF7m7u2vixIklXRL+gBFpAAAAwAAfNgQAAAAMEKQBAAAAAwRpAAAAwABBGgCKWGpqqurUqaPw8HCFh4crLCxM3bt317Jly4q8r6ysLPXu3dvRDg8PL5b7zL7//vtavXq10/sBgNKMu3YAgBOUK1euwGOFjxw5oueee06urq5q06ZNkfVz+vRp7dixw9G+2qOMnWHTpk26//77i6UvACitCNIAUAzuvvtuDRo0SB9//LFq166tCRMm6OzZs8rIyJC/v7+mTp2qFStWaO7cuY6nhx49elTdunXTmjVrVLZs2ased/To0bpw4YLCw8O1YMEC1a1bVxs2bNDatWu1cuVK2e12HT16VD4+PurWrZs+//xzHThwQH369FHfvn0lSfPmzdMXX3whu90uT09Pvf7666pVq9Y1X0tcXJx27typKVOm6OLFi5o4caISEhLk6+srSXruuef0zDPPaPXq1XJ3d1dKSopOnjypf/zjH4qKilKZMmX066+/Kjo6WqdOnVJ+fr569eqlLl26FPFZBwDnYmoHABQTf39/7d27VwkJCerQoYMSEhK0cuVKpaamau3atXriiSd06NAh7du3T9KlgNuxY8drhmhJmjx5smP029XVtcC6LVu26J///KeWLFmi48eP6+uvv9ann36q2NhYTZ06VXa7XZs3b9aiRYsUFxenRYsW6YUXXtDAgQOv+zp69uyp+vXra8SIEWrfvr06dOigefPmSZIOHTqkAwcOKCQkRJK0fft2zZ49W8uWLdOvv/6q+Ph45eXladCgQRo2bJgWLFigzz//XLNnz9bPP/98E2cXAIofI9IAUExsNpvKlSun4cOHa926dYqNjdWBAweUnp6uc+fOqWzZsuratavmzZunkSNHauHChfrss8+M+wsICFC1atUkSTVq1FCTJk3k4uKimjVrKicnR+fPn9fatWt18OBBde/e3bHfmTNndOrUqUI/cKVHjx565plnNHToUMXHx6tLly6OUN+xY0fH45PDw8OVlJSkoKAgHTp0SGPGjHEc48KFC9q9e7caNGhg/HoBoLgRpAGgmOzYsUO1a9fWq6++qvz8fLVt21aPPfaYjh07psvPxurevbu6dOmixo0b64EHHlDNmjWN+/vzSLab25U/8u12u8LDwzV8+HBHOz09XXfeeWeh+/H19ZWfn5+SkpK0dOlSJSQkONb9cZTcsiy5uLgoPz9flSpVKjCf+8SJE6pUqVKh+wSA0oCpHQBQDH7//XfNmDFDffv21Q8//KCXX35Z7dq1kyRt27ZN+fn5kqRq1aqpQYMGmjRpkp5++um/PK6bm5vy8/Nl+pDaJk2a6Ouvv1Z6erok6YsvvtCzzz77l/u5uroqLy/P0e7Ro4emTJmiwMBA+fj4OJZ/8803unjxonJycrRw4UKFhITI19e3wIcxjx07ptDQUO3cudPoNQBASWFEGgCc4PIHACXJxcVF7u7uevXVV/XYY49p6NChevnll1WhQgV5eHjo4Ycf1qFDhxz7durUSRMnTlTz5s3/sh8vLy8FBgbqySefVFxc3A3X2aRJE0VERKhv376y2Wzy8PDQ+++/L5vNdt39WrRooXfffVe5ubnq2LGjQkJCFBUVVWCKiHTp7iU9evTQmTNn1KZNG3Xu3FkuLi6aMWOGoqOjNWvWLOXl5Wnw4MFq1KjRDdcPACXJZpkOYwAAipzdbteECRNUvXp19evXr6TLKbStW7cqKipKS5cudYTwUaNG6YEHHtDzzz9fwtUBgHMwIg0ApUR2drZCQkL00EMPadSoUY7lPXr00NmzZ6+6T1xcnDw8PIq8llmzZikxMfGq655//nm1b9/e0R45cqQ2b96smJiYvxzJBoDbCSPSAAAAgAE+bAgAAAAYIEgDAAAABgjSAAAAgAGCNAAAAGCAIA0AAAAYIEgDAAAABv4/Pvo6wdL+APkAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 864x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def time(time):\n",
    "  if (time==6 or time==7 or time==8 or time==9 or time==10 or time==11) :\n",
    "    return'Morning'\n",
    "  elif (time==12 or time==13 or time==14 or time==15 or time==16 or time==17):\n",
    "    return 'Afternoon'\n",
    "  else:\n",
    "    return 'Evening' \n",
    "\n",
    "df_orders_sales_by_time['Day_time_type']=df_orders_sales_by_time['hour'].apply(time)\n",
    "\n",
    "sales_timing=df_orders_sales_by_time.groupby('Day_time_type')['Sales'].sum().reset_index().sort_values('Sales',ascending=False)\n",
    "\n",
    "#Sales on different day-time types\n",
    "plt.figure(figsize=(12,6))\n",
    "sns.barplot(x=sales_timing['Day_time_type'],y=sales_timing['Sales'])\n",
    "plt.title('Sales count in different day timings')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "7092fd3c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='InvoiceDate'>"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "time_series_df = df_orders.reset_index().copy()\n",
    "\n",
    "time_series_df['month'] = time_series_df.InvoiceDate.dt.month\n",
    "time_series_df['year'] = time_series_df.InvoiceDate.dt.year\n",
    "time_series_df['month_year']=time_series_df['month'].astype(str)+\"_\"+time_series_df['year'].astype(str)\n",
    "time_series_df.sort_values(by=['year','month'])\n",
    "\n",
    "from matplotlib.pyplot import figure\n",
    "\n",
    "figure(figsize=(8, 6), dpi=80)\n",
    "time_series_gb_df=time_series_df.groupby(pd.Grouper(key='InvoiceDate', freq=\"1m\"))['Sales'].sum().sort_index()\n",
    "time_series_gb_df.plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9e738a27",
   "metadata": {},
   "source": [
    "## RFM Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "42bc49fe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "\n",
       "        if (window._pyforest_update_imports_cell) { window._pyforest_update_imports_cell('import datetime as dt'); }\n",
       "    "
      ],
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>recency</th>\n",
       "      <th>T</th>\n",
       "      <th>frequency</th>\n",
       "      <th>monetary</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CustomerID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12346.0</th>\n",
       "      <td>400</td>\n",
       "      <td>726</td>\n",
       "      <td>12</td>\n",
       "      <td>637.540</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12347.0</th>\n",
       "      <td>402</td>\n",
       "      <td>405</td>\n",
       "      <td>8</td>\n",
       "      <td>5633.320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12348.0</th>\n",
       "      <td>362</td>\n",
       "      <td>439</td>\n",
       "      <td>5</td>\n",
       "      <td>2019.400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12349.0</th>\n",
       "      <td>570</td>\n",
       "      <td>590</td>\n",
       "      <td>4</td>\n",
       "      <td>3812.745</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12350.0</th>\n",
       "      <td>0</td>\n",
       "      <td>311</td>\n",
       "      <td>1</td>\n",
       "      <td>334.400</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            recency    T  frequency  monetary\n",
       "CustomerID                                   \n",
       "12346.0         400  726         12   637.540\n",
       "12347.0         402  405          8  5633.320\n",
       "12348.0         362  439          5  2019.400\n",
       "12349.0         570  590          4  3812.745\n",
       "12350.0           0  311          1   334.400"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#RFM Analysis\n",
    "raw_cltv_df = df_orders.reset_index().copy()\n",
    "\n",
    "today_date = dt.datetime(2011, 12, 11)\n",
    "\n",
    "cltv_df = raw_cltv_df.groupby('CustomerID').agg({'InvoiceDate': [lambda date: (date.max() - date.min()).days,\n",
    "                                                         lambda date: (today_date - date.min()).days],\n",
    "                                         'InvoiceNo': lambda num: num.nunique(),\n",
    "                                         'Sales': lambda TotalPrice: TotalPrice.sum()})\n",
    "cltv_df.columns = cltv_df.columns.droplevel(0)\n",
    "cltv_df.columns = ['recency', 'T', 'frequency', 'monetary']\n",
    "cltv_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "27f1df18",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'recency': {0.25: 0.0, 0.5: 220.5, 0.75: 511.0},\n",
       " 'frequency': {0.25: 1.0, 0.5: 3.0, 0.75: 7.0},\n",
       " 'monetary': {0.25: 341.865, 0.5: 875.97, 0.75: 2248.62}}"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "quantile = cltv_df[['recency', 'frequency', 'monetary']].quantile(q = [0.25,0.50,0.75])\n",
    "quantile = quantile.to_dict()\n",
    "quantile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "14f8c1b7",
   "metadata": {},
   "outputs": [],
   "source": [
    "# arguments (x = value, p = recency, monetary_value, frequency, d = quartiles dict)\n",
    "# Good customer= Low Recency, High Frequency, High Monetary\n",
    "\n",
    "#Function for scoring recency\n",
    "def RScoring(x,p,d):\n",
    "    if x <= d[p][0.25]:\n",
    "        return 1                               \n",
    "    elif x <= d[p][0.50]:\n",
    "        return 2\n",
    "    elif x <= d[p][0.75]: \n",
    "        return 3\n",
    "    else:\n",
    "        return 4\n",
    "\n",
    "#Function for scoring frequency and Monetary\n",
    "def FnMScoring(x,p,d):\n",
    "    if x <= d[p][0.25]:\n",
    "        return 4\n",
    "    elif x <= d[p][0.50]:\n",
    "        return 3\n",
    "    elif x <= d[p][0.75]: \n",
    "        return 2\n",
    "    else:\n",
    "        return 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "83ff440c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABIwAAAFQCAYAAADdkuVcAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAAAjUUlEQVR4nO3df5DXdYE/8OcHFhZD86rblUTGufwRN6Bongb+WFIbfkibtFppP7imacymuK4rywPSOuurJhf9cOi6G7PTcc7QEIijJQXDFBXZ7rJVGm0GMdFZljIVYRfY/Xz/uGvPd5DBsux7ZR+PGcfP+/V+f3w/3zP4Ap77er/flWq1Wg0AAAAA/K8hZQcAAAAAYGBRGAEAAABQoDACAAAAoEBhBAAAAECBwggAAACAgpqyA/w53d3defnllzNs2LBUKpWy4wAAAAC85lWr1ezatSsjR47MkCF7rica8IXRyy+/nCeeeKLsGAAAAACHnBNPPDFHHHHEHuMDvjAaNmxYkv+5gOHDh5ecBg6e1tbWjB8/vuwYABwg8znAocF8zqFu586deeKJJ3p6lz824AujP9yGNnz48NTW1pacBg4uv8YBDg3mc4BDg/mcweBPPf7HQ68BAAAAKFAYAQAAAFCgMAIAAACgQGEEAAAAQIHCCAAAAIAChREAAAAABQojAAAAAAoURuzVzl1dZUcYdE477bSyIww6fp0DAADsXU3ZARiYhg8bmsbPLi07BhxUP/rnC8uOAAAAMCBZYQQAAABAgcIIAAAAgAKFEQAAAAAFCiMAAAAAChRGAAAAABQojAAAAAAoUBgBAAAAUKAwAgAAAKBAYQQAAABAgcIIAAAAgAKFEQAAAAAFCiMAAAAAChRGAAAAABTsU2G0bdu2vOtd78ozzzyTJFm7dm0aGxszZcqULFiwoOe4DRs2pKmpKVOnTs3cuXOze/fuJMmzzz6bD37wg5k2bVo+8YlP5OWXXz4IlwIAAABAX/izhdEvfvGLXHrppXnqqaeSJB0dHZkzZ04WLlyYFStWpLW1NWvWrEmSXHHFFbnqqquycuXKVKvVLFq0KEny5S9/OR/4wAfS3Nyc8ePHZ+HChQfvigAAAAA4IH+2MFq0aFGuvvrq1NfXJ0keffTRHHvssRkzZkxqamrS2NiY5ubmbN68OR0dHTnllFOSJE1NTWlubs6uXbvyyCOPZOrUqYVxAAAAAAammj93wFe/+tXC9pYtW1JXV9ezXV9fn7a2tj3G6+rq0tbWlueffz6HH354ampqCuMAAAAADEx/tjD6Y93d3alUKj3b1Wo1lUrlT47/4d+v9Mfb+6K1tXW/v0PvnXbaaWVHgH7R0tJSdgTgEGRuATg0mM8ZzPa7MBo1alTa29t7ttvb21NfX7/H+NatW1NfX583vvGNeemll9LV1ZWhQ4f2HL+/xo8fn9ra2v3+HsCrUY4Cfa2lpcXcAnAIMJ9zqOvs7HzVxTn79Ja0V5owYUI2btyYTZs2paurK8uXL09DQ0NGjx6d2trangZ26dKlaWhoyLBhw/I3f/M3WbFiRZJkyZIlaWho6OXlAAAAAHCw7fcKo9ra2lx33XWZPXt2Ojs7M3ny5EybNi1JMn/+/MybNy/btm3LuHHjMmvWrCTJ1VdfnSuvvDLf+c538uY3vzlf//rX+/YqAAAAAOgz+1wYrV69uufzpEmTsmzZsj2OGTt2bO688849xkePHp1bb721lxEBAAAA6E/7fUsaAAAAAIc2hREAAAAABQojAAAAAAoURgAAAAAUKIwAAAAAKFAYAQAAAFCgMAIAAACgQGEEAAAAQIHCCAAAAIAChREAAAAABQojAAAAAAoURgAAAAAUKIwAAAAAKFAYAQAAAFCgMAIAAACgQGEEAAAAQIHCCAAAAIAChREAAAAABQojAAAAAAoURgAAAAAUKIwAAAAAKFAYAQAAAFCgMAIAAACgQGEEAAAAQIHCCAAAAIAChREAAAAABQojAAAAAAoURgAAAAAUKIwAAAAAKDigwmjp0qWZMWNGZsyYkeuvvz5Jsnbt2jQ2NmbKlClZsGBBz7EbNmxIU1NTpk6dmrlz52b37t0HlhwAAACAg6LXhdGOHTvy1a9+NbfeemuWLl2a9evXZ/Xq1ZkzZ04WLlyYFStWpLW1NWvWrEmSXHHFFbnqqquycuXKVKvVLFq0qM8uAgAAAIC+0+vCqKurK93d3dmxY0d2796d3bt35/DDD8+xxx6bMWPGpKamJo2NjWlubs7mzZvT0dGRU045JUnS1NSU5ubmvroGAAAAAPpQTW+/ePjhh+fTn/50pk+fnsMOOyynn356tmzZkrq6up5j6uvr09bWtsd4XV1d2traDiw5AAAAAAdFrwujX/3qV/nhD3+Ye++9N0cccUQ+97nP5amnnkqlUuk5plqtplKppLu7e6/j+6O1tbW3UemF0047rewI0C9aWlrKjgAcgswtAIcG8zmDWa8Lo/vvvz+TJk3Km970piT/c5vZTTfdlKFDh/Yc097envr6+owaNSrt7e0941u3bk19ff1+nW/8+PGpra3tbVyAvVKOAn2tpaXF3AJwCDCfc6jr7Ox81cU5vX6G0dixY7N27dps37491Wo1q1evzoQJE7Jx48Zs2rQpXV1dWb58eRoaGjJ69OjU1tb2tLNLly5NQ0NDb08NAAAAwEHU6xVGZ599dh5//PE0NTVl2LBhOemkkzJ79uycddZZmT17djo7OzN58uRMmzYtSTJ//vzMmzcv27Zty7hx4zJr1qw+uwgAAAAA+k6vC6Mkueyyy3LZZZcVxiZNmpRly5btcezYsWNz5513HsjpAAAAAOgHvb4lDQAAAIBDk8IIAAAAgAKFEQAAAAAFCiMAAAAAChRGAAAAABQojAAAAAAoUBgBAAAAUKAwAgAAAKBAYQQAAABAgcIIAAAAgAKFEQAAAAAFCiMAAAAAChRGAAAAABQojAAAAAAoUBgBAAAAUKAwAgAAAKBAYQQAAABAgcIIAAAAgAKFEQAAAAAFCiMAAAAAChRGAAAAABQojAAAAAAoUBgBAAAAUKAwAgAAAKBAYQQAAABAgcIIAAAAgAKFEQAAAAAFCiMAAAAAChRGAAAAABQcUGG0evXqNDU1Zfr06fnKV76SJFm7dm0aGxszZcqULFiwoOfYDRs2pKmpKVOnTs3cuXOze/fuA0sOAAAAwEHR68LoN7/5Ta6++uosXLgwy5Yty+OPP541a9Zkzpw5WbhwYVasWJHW1tasWbMmSXLFFVfkqquuysqVK1OtVrNo0aI+uwgAAAAA+k6vC6O77747F1xwQUaNGpVhw4ZlwYIFOeyww3LsscdmzJgxqampSWNjY5qbm7N58+Z0dHTklFNOSZI0NTWlubm5r64BAAAAgD5U09svbtq0KcOGDcvll1+e5557Lu94xztywgknpK6urueY+vr6tLW1ZcuWLYXxurq6tLW17df5WltbexuVXjjttNPKjgD9oqWlpewIwCHI3AJwaDCfM5j1ujDq6urK+vXrc+utt+Z1r3tdPvGJT2TEiBGpVCo9x1Sr1VQqlXR3d+91fH+MHz8+tbW1vY0LsFfKUaCvtbS0mFsADgHmcw51nZ2dr7o4p9eF0V/+5V9m0qRJeeMb35gkeec735nm5uYMHTq055j29vbU19dn1KhRaW9v7xnfunVr6uvre3tqAAAAAA6iXj/D6Nxzz83999+fF198MV1dXfnZz36WadOmZePGjdm0aVO6urqyfPnyNDQ0ZPTo0amtre1Zzrd06dI0NDT02UUAAAAA0Hd6vcJowoQJ+djHPpYPfOAD2bVrV84666xceumlectb3pLZs2ens7MzkydPzrRp05Ik8+fPz7x587Jt27aMGzcus2bN6rOLAAAAAKDv9LowSpKLL744F198cWFs0qRJWbZs2R7Hjh07NnfeeeeBnA4AAACAftDrW9IAAAAAODQpjAAAAAAoUBgBAAAAUKAwAgAAAKBAYQQAAABAgcIIAAAAgAKFEQAAAAAFCiMAAAAAChRGAAAAABQojAAAAAAoUBgBAAAAUKAwAgAAAKBAYQQAAABAgcIIAAAAgAKFEQAAAAAFCiMAAAAAChRGAAAAABQojAAAAAAoUBgBAAAAUKAwAgAAAKBAYQQAAABAgcIIAAAAgAKFEQAAAAAFCiMAAAAAChRGAAAAABQojAAAAAAoUBgBAAAAUKAwAgAAAKCgTwqj66+/PldeeWWSZO3atWlsbMyUKVOyYMGCnmM2bNiQpqamTJ06NXPnzs3u3bv74tQAAAAA9LEDLowefPDB3HXXXUmSjo6OzJkzJwsXLsyKFSvS2tqaNWvWJEmuuOKKXHXVVVm5cmWq1WoWLVp0oKcGAAAA4CA4oMLo97//fRYsWJDLL788SfLoo4/m2GOPzZgxY1JTU5PGxsY0Nzdn8+bN6ejoyCmnnJIkaWpqSnNz8wGHBwAAAKDvHVBhdNVVV+Uzn/lMXv/61ydJtmzZkrq6up799fX1aWtr22O8rq4ubW1tB3JqAAAAAA6Smt5+8Y477sib3/zmTJo0KYsXL06SdHd3p1Kp9BxTrVZTqVT+5Pj+aG1t7W1UeuG0004rOwL0i5aWlrIjAIcgcwvAocF8zmDW68JoxYoVaW9vz4UXXpgXXngh27dvz+bNmzN06NCeY9rb21NfX59Ro0alvb29Z3zr1q2pr6/fr/ONHz8+tbW1vY0LsFfKUaCvtbS0mFsADgHmcw51nZ2dr7o4p9eF0c0339zzefHixVm3bl2+/OUvZ8qUKdm0aVOOOeaYLF++PBdddFFGjx6d2tranv/hli5dmoaGht6eGgAAAICDqNeF0d7U1tbmuuuuy+zZs9PZ2ZnJkydn2rRpSZL58+dn3rx52bZtW8aNG5dZs2b15akBAAAA6CN9Uhg1NTWlqakpSTJp0qQsW7Zsj2PGjh2bO++8sy9OBwAAAMBBdEBvSQMAAADg0KMwAoBD2M5dXWVHGHQ8ILX/+XUOAH2vT59hBAAMLMOHDU3jZ5eWHQMOqh/984VlRwCAQ44VRgAAAAAUKIwAAAAAKFAYAQAAAFCgMAIAAACgQGEEAAAAQIHCCAAAAIAChREAAAAABQojAAAAAAoURgAAAAAUKIwAAAAAKFAYAQAAAFCgMAIAAACgQGEEAAAAQIHCCAAAAIAChREAAAAABQojAAAAAAoURgAAAAAUKIwAAAAAKFAYAQAAAFCgMAIAAACgQGEEAAAAQIHCCAAAAIAChREAAAAABQojAAAAAAoURgAAAAAUKIwAAAAAKDigwujGG2/MjBkzMmPGjHzta19LkqxduzaNjY2ZMmVKFixY0HPshg0b0tTUlKlTp2bu3LnZvXv3gSUHAAAA4KDodWG0du3a3H///bnrrruyZMmSPPbYY1m+fHnmzJmThQsXZsWKFWltbc2aNWuSJFdccUWuuuqqrFy5MtVqNYsWLeqziwAAAACg7/S6MKqrq8uVV16Z4cOHZ9iwYTnuuOPy1FNP5dhjj82YMWNSU1OTxsbGNDc3Z/Pmzeno6Mgpp5ySJGlqakpzc3NfXQMAAAAAfajXhdEJJ5zQUwA99dRT+fGPf5xKpZK6urqeY+rr69PW1pYtW7YUxuvq6tLW1tb71AAAAAAcNDUH+h948skn8/GPfzyf//znM3To0Dz11FM9+6rVaiqVSrq7u1OpVPYY3x+tra0HGpX9cNppp5UdAfpFS0tL2RHgoDKfM1iYzznUjf3rcRn5uhFlxxhU/B7a/17e3pFfbXis7Bj8rwMqjFpaWvJ3f/d3mTNnTmbMmJF169alvb29Z397e3vq6+szatSowvjWrVtTX1+/X+caP358amtrDyQuwB78QQDg0GA+ZzBo/OzSsiPAQfWjf77QfN6POjs7X3VxTq9vSXvuuefyyU9+MvPnz8+MGTOSJBMmTMjGjRuzadOmdHV1Zfny5WloaMjo0aNTW1vb85OfpUuXpqGhobenBgAAAOAg6vUKo5tuuimdnZ257rrresYuueSSXHfddZk9e3Y6OzszefLkTJs2LUkyf/78zJs3L9u2bcu4ceMya9asA08PAAAAQJ/rdWE0b968zJs3b6/7li1btsfY2LFjc+edd/b2dAAAAAD0k17fkgYAAADAoUlhBAAAAECBwggAAACAAoURAAAAAAUKIwAAAAAKFEYAAAAAFCiMAAAAAChQGAEAAABQoDACAAAAoEBhBAAAAECBwggAAACAAoURAAAAAAUKIwAAAAAKFEYAAAAAFCiMAAAAAChQGAEAAABQoDACAAAAoEBhBAAAAECBwggAAACAAoURAAAAAAUKIwAAAAAKFEYAAAAAFCiMAAAAAChQGAEAAABQoDACAAAAoEBhBAAAAECBwggAAACAAoURAAAAAAUKIwAAAAAK+rUw+tGPfpQLLrggU6ZMyW233dafpwYAAABgH9X014na2tqyYMGCLF68OMOHD88ll1ySt7/97Tn++OP7KwIAAAAA+6DfCqO1a9dm4sSJ+Yu/+IskydSpU9Pc3JxPfepTr/q9arWaJNm5c+fBjsgf+YuRQ8uOAAdVZ2dn2RGgX5jPOdSZzxkszOcc6szn/esPPcsfepc/1m+F0ZYtW1JXV9ezXV9fn0cfffTPfm/Xrl1JkieeeOKgZWPv/v7CN5cdAQ6q1tbWsiNAvzCfc6gznzNYmM851JnPy7Fr166MGDFij/F+K4y6u7tTqVR6tqvVamH7Txk5cmROPPHEDBs2bJ+OBwAAAODVVavV7Nq1KyNHjtzr/n4rjEaNGpX169f3bLe3t6e+vv7Pfm/IkCE54ogjDmY0AAAAgEFnbyuL/qDf3pJ25pln5sEHH8zvfve77NixIz/5yU/S0NDQX6cHAAAAYB/12wqjo446Kp/5zGcya9as7Nq1KxdffHFOPvnk/jo9AAAAAPuoUv1Tj8MGAAAAYFDqt1vSAAAAAHhtUBgBAAAAUKAwAgAAAKBAYQQAAABAgcIIAAAAgIKasgMAAABAWZYsWfKq+2fOnNkvOWCgURhBCW688cZX3f+pT32qn5IA0Je2bduW5557LieccELZUQDYRw8//PCr7lcYMVgpjAAADsAdd9yRlpaWfP7zn8/MmTMzcuTIXHjhhbn88svLjgbAPrj22mvLjgADUqVarVbLDgH8j2q1mmeeeSZjxowpOwoA+6ipqSn/8i//kubm5mzcuDFz587N+973vixevLjsaADsh/POOy+VSmWP8VWrVpWQBspnhRGU6Ac/+EGuv/767Nixo2fsmGOOyd13311iKgD2V319fdasWZNZs2alpqYmnZ2dZUcCYD/deuutPZ93796du+++Ozt37iwxEZTLW9KgRN/97nezdOnSXHDBBbn77rszb968nHzyyWXHAmA/HH/88fn4xz+eZ555JpMmTcrf//3fm8sBXoNGjx7d88+xxx6bj33sY7nnnnvKjgWlscIISvSmN70pY8aMyVvf+tY88cQT+eAHP5j/+I//KDsWAPvh//2//5f/+q//yoknnpjhw4fn3e9+dxoaGsqOBcB+euSRR3o+V6vVPPnkk1aMMqgpjKBEhx12WB566KG89a1vzT333JOTTjopHR0dZccCYD90d3dn/fr1ufPOO/PFL34xjz/+eM4+++yyYwGwn771rW/1fK5UKnnDG96Q6667rsREUC63pEGJvvjFL2b16tU555xz8vvf/z7Tp0/Phz70obJjAbAf/umf/ik7duzIY489lqFDh+bpp5/OnDlzyo4FwD763Oc+lyR597vfnVtvvTW33nprbrnllnzzm9/MSSedVHI6KI8VRlCiX//61/nc5z6XIUOG5Nvf/nbZcQDohcceeyx33XVX7rvvvhx22GG5/vrr09jYWHYsAPbRunXrcscdd+Q73/lOhg0btsf+mTNn9n8oGAAURlCi++67LzfccEMmT56c97znPR6SCvAaVKlUsnPnzp5XMT///PN7fS0zAAPTNddck5UrV+bll1/Oww8/vMd+hRGDVaVarVbLDgGD2Y4dO/KTn/wky5cvz29/+9vMmDEjM2fOzJve9KayowGwD5YsWZI77rgjmzZtyvTp03PPPffkk5/8ZC6++OKyowGwH+644468973vLTsGDBgKIxgA1q9fn2XLluWhhx7KKaeckg0bNuT973+/5xkBvEb8+te/zsMPP5yurq6cccYZGTt2bNmRANhPv/nNb3L77bfn+eefzyv/mnzttdeWmArKozCCEi1YsCDLly/PMccck6ampkybNi21tbXZtm1bzj///L0uiQVgYFiyZMmr7ncLA8Bry8yZMzNp0qSccMIJhVuL3/Oe95SYCsrjGUZQoiFDhuT73/9+xowZUxg//PDD82//9m8lpQJgX/y5Ul9hBPDaUq1W84UvfKHsGDBgWGEEJeru7s7tt9+ehx56KLt3787b3/72fPjDH86QIUPKjgbAAejo6MiIESPKjgHAfvjSl76Us846K+eff74/j0MURlCq66+/Pps2bcpFF12UarWaxYsXZ/To0Zk7d27Z0QDYR6tXr843vvGNbN++PdVqNd3d3eno6MiDDz5YdjQA9sHYsWNTqVR6nlv0h9vRqtVqKpVKNmzYUGY8KI1b0qBEDzzwQJYsWdLzE4x3vOMdaWxsLDkVAPvj2muvzTXXXJObb745l19+ee65557s2LGj7FgA7KNf/epXf3Lfzp07+zEJDCzW2UGJurq6snv37sL20KFDS0wEwP464ogjMnHixEyYMCEvvfRSrrjiijz00ENlxwJgP73//e8vbHd3d+eiiy4qKQ2UzwojKFFjY2NmzZqVGTNmJEn+8z//M+9617tKTgXA/hgxYkQ2btyY4447LuvWrcvEiROza9eusmMBsI9mzZqVdevWJfmf29P+oKamJuedd15ZsaB0nmEEJbvvvvvy4IMPplqtZuLEifnpT3+aL33pS2XHAmAfrVu3LrfddltuuOGGXHrppXn66adz0UUX5corryw7GgD74Stf+UrmzZtXdgwYMBRGMMC87W1vy89//vOyYwDQSy+88EKOPPLIsmMAsI/uvffenHvuubnrrrt6Hnj9SjNnzuz/UDAAuCUNBhgdLsBry6OPPprvfe97ef755wtz+C233FJiKgD21S9/+cuce+65Pbel/TGFEYOVFUYwwFhhBPDaMn369HzoQx/K8ccfX/jJ9BlnnFFiKgD6QkdHR0aMGFF2DCiFFUZQgg9/+MN7Xe5arVbT2dlZQiIAemvEiBH54Ac/WHYMAA7Q6tWr841vfCPbt29PtVpNd3d3Ojo68uCDD5YdDUqhMIISzJ49u+wIABygZ599Nkny13/91/n+97+f888/P0OHDu3Zf/TRR5cVDYBeuPbaa3PNNdfk5ptvzuWXX5577rknO3bsKDsWlMYtaQAAvXD++ef3fP7jP05VKpWsWrWqvyMBcACampqyePHiLFy4MOPHj09DQ0MuuOCCrFixouxoUAorjAAAeqGzszMjR47MWWedlbPOOisTJ07MyJEjy44FQC+NGDEiGzduzHHHHZd169Zl4sSJ2bVrV9mxoDRWGAEA9NLTTz+d9evX55FHHskv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\n",
      "text/plain": [
       "<Figure size 1440x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cltv_df[\"R\"] = cltv_df['recency'].apply(RScoring,args=('recency',quantile,))\n",
    "cltv_df[\"F\"] = cltv_df['frequency'].apply(FnMScoring,args=('frequency',quantile,))\n",
    "cltv_df[\"M\"] = cltv_df['monetary'].apply(FnMScoring,args=('monetary',quantile,))\n",
    "\n",
    "cltv_df['RFM_Group'] = cltv_df.R.map(str)+cltv_df.F.map(str)+cltv_df.M.map(str)\n",
    "\n",
    "cltv_df['RFM_Score'] = cltv_df[['R', 'F', 'M']].sum(axis = 1)\n",
    "\n",
    "Loyalty_Level = ['Platinum','Gold','Silver','Bronze']\n",
    "\n",
    "Score_cut = pd.qcut(cltv_df['RFM_Score'],q = 4,labels=Loyalty_Level)\n",
    "\n",
    "cltv_df['RFM_Loyalty_Level'] = Score_cut.values\n",
    "\n",
    "cltv_df.reset_index().head()\n",
    "\n",
    "def RFM_Segment(row):\n",
    "    if row.RFM_Group == '111':\n",
    "        return \"Core\"\n",
    "    if row.F == 1 and row.M != 1:\n",
    "        return \"Promising - Faithful\"\n",
    "    if row.F == 1:\n",
    "        return \"Loyal\"\n",
    "    if row.M == 1:\n",
    "        return \"Whales\"\n",
    "    else:\n",
    "        return None\n",
    "\n",
    "cltv_df[\"RFM_Segment\"] = cltv_df.apply (lambda row: RFM_Segment(row), axis=1)\n",
    "\n",
    "cltv_df[\"RFM_Segment\"].value_counts().plot.bar()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ee5430cf",
   "metadata": {},
   "source": [
    "RFM Segment Definition:\n",
    "https://www.barilliance.com/rfm-analysis/#:~:text=RFM%20analysis%20is%20a%20data,much%20they've%20spent%20overall\n",
    "\n",
    "From the above graph we can see that a few customers are bucketed into Loyal, Whales and Promising - Faithful. We can further target these customers as per the segment definition mentioned in the above link\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ae231893",
   "metadata": {},
   "source": [
    "### Prepare Data for Processing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "419620f9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>CustomerID</th>\n",
       "      <td>18023.0</td>\n",
       "      <td>15304.551684</td>\n",
       "      <td>1705.255017</td>\n",
       "      <td>12346.00</td>\n",
       "      <td>13842.00000</td>\n",
       "      <td>15288.000</td>\n",
       "      <td>16779.000</td>\n",
       "      <td>18287.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sales_sum</th>\n",
       "      <td>18023.0</td>\n",
       "      <td>912.372212</td>\n",
       "      <td>2749.343434</td>\n",
       "      <td>0.85</td>\n",
       "      <td>235.91000</td>\n",
       "      <td>421.685</td>\n",
       "      <td>856.930</td>\n",
       "      <td>86203.58000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sales_avg</th>\n",
       "      <td>18023.0</td>\n",
       "      <td>394.463728</td>\n",
       "      <td>414.153858</td>\n",
       "      <td>0.85</td>\n",
       "      <td>181.36125</td>\n",
       "      <td>304.235</td>\n",
       "      <td>455.215</td>\n",
       "      <td>9209.35375</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sales_count</th>\n",
       "      <td>18023.0</td>\n",
       "      <td>2.051212</td>\n",
       "      <td>2.634399</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>2.000</td>\n",
       "      <td>80.00000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               count          mean          std       min          25%  \\\n",
       "CustomerID   18023.0  15304.551684  1705.255017  12346.00  13842.00000   \n",
       "sales_sum    18023.0    912.372212  2749.343434      0.85    235.91000   \n",
       "sales_avg    18023.0    394.463728   414.153858      0.85    181.36125   \n",
       "sales_count  18023.0      2.051212     2.634399      1.00      1.00000   \n",
       "\n",
       "                   50%        75%          max  \n",
       "CustomerID   15288.000  16779.000  18287.00000  \n",
       "sales_sum      421.685    856.930  86203.58000  \n",
       "sales_avg      304.235    455.215   9209.35375  \n",
       "sales_count      1.000      2.000     80.00000  "
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Setting the frequency as 3 Month to get each quarter \n",
    "clv_freq = '3M'\n",
    "\n",
    "# Grouping by 3 months\n",
    "df_data = df_orders.reset_index().groupby([\n",
    "            'CustomerID',\n",
    "            pd.Grouper(key='InvoiceDate', freq=clv_freq)\n",
    "            ]).agg({'Sales': [sum, groupby_mean, groupby_count],})\n",
    "\n",
    "# Renaming the Grouped Columns\n",
    "df_data.columns = ['_'.join(col).lower() for col in df_data.columns]\n",
    "\n",
    "df_data = df_data.reset_index()\n",
    "\n",
    "df_data.describe().T\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "0d816def",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'2011-12-31': 'M_1',\n",
       " '2011-09-30': 'M_2',\n",
       " '2011-06-30': 'M_3',\n",
       " '2011-03-31': 'M_4',\n",
       " '2010-12-31': 'M_5',\n",
       " '2010-09-30': 'M_6',\n",
       " '2010-06-30': 'M_7',\n",
       " '2010-03-31': 'M_8',\n",
       " '2009-12-31': 'M_9'}"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "map_date_month = {str(x)[:10]: 'M_%s' % (i+1) for i, x in enumerate(\n",
    "                    sorted(df_data.reset_index()['InvoiceDate'].unique(), reverse=True))}\n",
    "\n",
    "map_date_month"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "caa625b6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2011-12-31    2560\n",
       "Name: InvoiceDate, dtype: int64"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Getting quarter against the date\n",
    "df_data['M'] = df_data['InvoiceDate'].apply(lambda x: map_date_month[str(x)[:10]])\n",
    "df_data[df_data['M']==\"M_1\"][\"InvoiceDate\"].value_counts()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "bf73f06b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "M_5    2670\n",
       "M_1    2560\n",
       "M_2    2161\n",
       "M_6    2060\n",
       "M_7    2047\n",
       "M_3    1991\n",
       "M_8    1803\n",
       "M_4    1776\n",
       "M_9     955\n",
       "Name: M, dtype: int64"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Number of purchases made in each chunk\n",
    "df_data['M'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "644b5d67",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sales_avg_M_2</th>\n",
       "      <th>sales_avg_M_3</th>\n",
       "      <th>sales_avg_M_4</th>\n",
       "      <th>sales_avg_M_5</th>\n",
       "      <th>sales_avg_M_6</th>\n",
       "      <th>sales_avg_M_7</th>\n",
       "      <th>sales_avg_M_8</th>\n",
       "      <th>sales_avg_M_9</th>\n",
       "      <th>sales_count_M_2</th>\n",
       "      <th>sales_count_M_3</th>\n",
       "      <th>...</th>\n",
       "      <th>sales_count_M_8</th>\n",
       "      <th>sales_count_M_9</th>\n",
       "      <th>sales_sum_M_2</th>\n",
       "      <th>sales_sum_M_3</th>\n",
       "      <th>sales_sum_M_4</th>\n",
       "      <th>sales_sum_M_5</th>\n",
       "      <th>sales_sum_M_6</th>\n",
       "      <th>sales_sum_M_7</th>\n",
       "      <th>sales_sum_M_8</th>\n",
       "      <th>sales_sum_M_9</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CustomerID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12346.0</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>264.680000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>142.3100</td>\n",
       "      <td>23.410</td>\n",
       "      <td>22.700</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>264.68</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>142.310</td>\n",
       "      <td>117.050</td>\n",
       "      <td>113.500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12347.0</th>\n",
       "      <td>584.910000</td>\n",
       "      <td>509.385</td>\n",
       "      <td>475.390000</td>\n",
       "      <td>1017.555</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>584.91</td>\n",
       "      <td>1018.77</td>\n",
       "      <td>475.39</td>\n",
       "      <td>2035.110</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12348.0</th>\n",
       "      <td>310.000000</td>\n",
       "      <td>367.000</td>\n",
       "      <td>227.440000</td>\n",
       "      <td>892.800</td>\n",
       "      <td>222.16</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>310.00</td>\n",
       "      <td>367.00</td>\n",
       "      <td>227.44</td>\n",
       "      <td>892.800</td>\n",
       "      <td>222.16</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12349.0</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1197.305</td>\n",
       "      <td>0.00</td>\n",
       "      <td>556.6025</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1197.305</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1113.205</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12350.0</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>334.400000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>334.40</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18283.0</th>\n",
       "      <td>92.696667</td>\n",
       "      <td>131.170</td>\n",
       "      <td>105.966667</td>\n",
       "      <td>97.675</td>\n",
       "      <td>92.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>118.140</td>\n",
       "      <td>0.000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>278.09</td>\n",
       "      <td>524.68</td>\n",
       "      <td>317.90</td>\n",
       "      <td>195.350</td>\n",
       "      <td>92.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>354.420</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18284.0</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>456.365</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>456.365</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18285.0</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>421.685</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>421.685</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18286.0</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>833.48</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>457.635</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>833.48</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>457.635</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18287.0</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>765.280</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>376.185</td>\n",
       "      <td>446.30</td>\n",
       "      <td>1071.6100</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>765.28</td>\n",
       "      <td>0.00</td>\n",
       "      <td>376.185</td>\n",
       "      <td>892.60</td>\n",
       "      <td>1071.610</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5438 rows Ã— 24 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            sales_avg_M_2  sales_avg_M_3  sales_avg_M_4  sales_avg_M_5  \\\n",
       "CustomerID                                                               \n",
       "12346.0          0.000000          0.000     264.680000          0.000   \n",
       "12347.0        584.910000        509.385     475.390000       1017.555   \n",
       "12348.0        310.000000        367.000     227.440000        892.800   \n",
       "12349.0          0.000000          0.000       0.000000       1197.305   \n",
       "12350.0          0.000000          0.000     334.400000          0.000   \n",
       "...                   ...            ...            ...            ...   \n",
       "18283.0         92.696667        131.170     105.966667         97.675   \n",
       "18284.0          0.000000          0.000       0.000000        456.365   \n",
       "18285.0          0.000000          0.000       0.000000          0.000   \n",
       "18286.0          0.000000          0.000       0.000000          0.000   \n",
       "18287.0          0.000000        765.280       0.000000        376.185   \n",
       "\n",
       "            sales_avg_M_6  sales_avg_M_7  sales_avg_M_8  sales_avg_M_9  \\\n",
       "CustomerID                                                               \n",
       "12346.0              0.00       142.3100         23.410         22.700   \n",
       "12347.0              0.00         0.0000          0.000          0.000   \n",
       "12348.0            222.16         0.0000          0.000          0.000   \n",
       "12349.0              0.00       556.6025          0.000          0.000   \n",
       "12350.0              0.00         0.0000          0.000          0.000   \n",
       "...                   ...            ...            ...            ...   \n",
       "18283.0             92.00         0.0000        118.140          0.000   \n",
       "18284.0              0.00         0.0000          0.000          0.000   \n",
       "18285.0              0.00         0.0000        421.685          0.000   \n",
       "18286.0            833.48         0.0000          0.000        457.635   \n",
       "18287.0            446.30      1071.6100          0.000          0.000   \n",
       "\n",
       "            sales_count_M_2  sales_count_M_3  ...  sales_count_M_8  \\\n",
       "CustomerID                                    ...                    \n",
       "12346.0                 0.0              0.0  ...              5.0   \n",
       "12347.0                 1.0              2.0  ...              0.0   \n",
       "12348.0                 1.0              1.0  ...              0.0   \n",
       "12349.0                 0.0              0.0  ...              0.0   \n",
       "12350.0                 0.0              0.0  ...              0.0   \n",
       "...                     ...              ...  ...              ...   \n",
       "18283.0                 3.0              4.0  ...              3.0   \n",
       "18284.0                 0.0              0.0  ...              0.0   \n",
       "18285.0                 0.0              0.0  ...              1.0   \n",
       "18286.0                 0.0              0.0  ...              0.0   \n",
       "18287.0                 0.0              1.0  ...              0.0   \n",
       "\n",
       "            sales_count_M_9  sales_sum_M_2  sales_sum_M_3  sales_sum_M_4  \\\n",
       "CustomerID                                                                 \n",
       "12346.0                 5.0           0.00           0.00         264.68   \n",
       "12347.0                 0.0         584.91        1018.77         475.39   \n",
       "12348.0                 0.0         310.00         367.00         227.44   \n",
       "12349.0                 0.0           0.00           0.00           0.00   \n",
       "12350.0                 0.0           0.00           0.00         334.40   \n",
       "...                     ...            ...            ...            ...   \n",
       "18283.0                 0.0         278.09         524.68         317.90   \n",
       "18284.0                 0.0           0.00           0.00           0.00   \n",
       "18285.0                 0.0           0.00           0.00           0.00   \n",
       "18286.0                 1.0           0.00           0.00           0.00   \n",
       "18287.0                 0.0           0.00         765.28           0.00   \n",
       "\n",
       "            sales_sum_M_5  sales_sum_M_6  sales_sum_M_7  sales_sum_M_8  \\\n",
       "CustomerID                                                               \n",
       "12346.0             0.000           0.00        142.310        117.050   \n",
       "12347.0          2035.110           0.00          0.000          0.000   \n",
       "12348.0           892.800         222.16          0.000          0.000   \n",
       "12349.0          1197.305           0.00       1113.205          0.000   \n",
       "12350.0             0.000           0.00          0.000          0.000   \n",
       "...                   ...            ...            ...            ...   \n",
       "18283.0           195.350          92.00          0.000        354.420   \n",
       "18284.0           456.365           0.00          0.000          0.000   \n",
       "18285.0             0.000           0.00          0.000        421.685   \n",
       "18286.0             0.000         833.48          0.000          0.000   \n",
       "18287.0           376.185         892.60       1071.610          0.000   \n",
       "\n",
       "            sales_sum_M_9  \n",
       "CustomerID                 \n",
       "12346.0           113.500  \n",
       "12347.0             0.000  \n",
       "12348.0             0.000  \n",
       "12349.0             0.000  \n",
       "12350.0             0.000  \n",
       "...                   ...  \n",
       "18283.0             0.000  \n",
       "18284.0             0.000  \n",
       "18285.0             0.000  \n",
       "18286.0           457.635  \n",
       "18287.0             0.000  \n",
       "\n",
       "[5438 rows x 24 columns]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Generating the quarterly sales metrics\n",
    "df_features = pd.pivot_table(\n",
    "                df_data.loc[df_data['M'] != 'M_1'], \n",
    "                values=['sales_sum', 'sales_avg', 'sales_count'], \n",
    "                columns='M', \n",
    "                index='CustomerID')\n",
    "\n",
    "df_features.columns = ['_'.join(col) for col in df_features.columns]\n",
    "\n",
    "df_features.reset_index()\n",
    "\n",
    "df_features.fillna(0, inplace=True)\n",
    "\n",
    "df_features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "ad329623",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2560, 2)"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# getting the Target Variable\n",
    "\n",
    "df_target = df_data.loc[df_data['M'] == 'M_1', ['CustomerID', 'sales_sum']]\n",
    "\n",
    "df_target.columns = ['CustomerID', 'CLV_'+clv_freq]\n",
    "\n",
    "df_target.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "e22832ee",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>sales_avg_M_2</th>\n",
       "      <th>sales_avg_M_3</th>\n",
       "      <th>sales_avg_M_4</th>\n",
       "      <th>sales_avg_M_5</th>\n",
       "      <th>sales_avg_M_6</th>\n",
       "      <th>sales_avg_M_7</th>\n",
       "      <th>sales_avg_M_8</th>\n",
       "      <th>sales_avg_M_9</th>\n",
       "      <th>sales_count_M_2</th>\n",
       "      <th>...</th>\n",
       "      <th>sales_count_M_9</th>\n",
       "      <th>sales_sum_M_2</th>\n",
       "      <th>sales_sum_M_3</th>\n",
       "      <th>sales_sum_M_4</th>\n",
       "      <th>sales_sum_M_5</th>\n",
       "      <th>sales_sum_M_6</th>\n",
       "      <th>sales_sum_M_7</th>\n",
       "      <th>sales_sum_M_8</th>\n",
       "      <th>sales_sum_M_9</th>\n",
       "      <th>CLV_3M</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>264.680000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>142.3100</td>\n",
       "      <td>23.410</td>\n",
       "      <td>22.700</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>264.68</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>142.310</td>\n",
       "      <td>117.050</td>\n",
       "      <td>113.500</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>12347.0</td>\n",
       "      <td>584.910000</td>\n",
       "      <td>509.385</td>\n",
       "      <td>475.390000</td>\n",
       "      <td>1017.555</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>584.91</td>\n",
       "      <td>1018.77</td>\n",
       "      <td>475.39</td>\n",
       "      <td>2035.110</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1519.140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>12348.0</td>\n",
       "      <td>310.000000</td>\n",
       "      <td>367.000</td>\n",
       "      <td>227.440000</td>\n",
       "      <td>892.800</td>\n",
       "      <td>222.16</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>310.00</td>\n",
       "      <td>367.00</td>\n",
       "      <td>227.44</td>\n",
       "      <td>892.800</td>\n",
       "      <td>222.16</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>12349.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1197.305</td>\n",
       "      <td>0.00</td>\n",
       "      <td>556.6025</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1197.305</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1113.205</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1502.235</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12350.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>334.400000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>334.40</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5433</th>\n",
       "      <td>18283.0</td>\n",
       "      <td>92.696667</td>\n",
       "      <td>131.170</td>\n",
       "      <td>105.966667</td>\n",
       "      <td>97.675</td>\n",
       "      <td>92.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>118.140</td>\n",
       "      <td>0.000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>278.09</td>\n",
       "      <td>524.68</td>\n",
       "      <td>317.90</td>\n",
       "      <td>195.350</td>\n",
       "      <td>92.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>354.420</td>\n",
       "      <td>0.000</td>\n",
       "      <td>974.210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5434</th>\n",
       "      <td>18284.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>456.365</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>456.365</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5435</th>\n",
       "      <td>18285.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>421.685</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>421.685</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5436</th>\n",
       "      <td>18286.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>833.48</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>457.635</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>833.48</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>457.635</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5437</th>\n",
       "      <td>18287.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>765.280</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>376.185</td>\n",
       "      <td>446.30</td>\n",
       "      <td>1071.6100</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>765.28</td>\n",
       "      <td>0.00</td>\n",
       "      <td>376.185</td>\n",
       "      <td>892.60</td>\n",
       "      <td>1071.610</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1072.000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5438 rows Ã— 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      CustomerID  sales_avg_M_2  sales_avg_M_3  sales_avg_M_4  sales_avg_M_5  \\\n",
       "0        12346.0       0.000000          0.000     264.680000          0.000   \n",
       "1        12347.0     584.910000        509.385     475.390000       1017.555   \n",
       "2        12348.0     310.000000        367.000     227.440000        892.800   \n",
       "3        12349.0       0.000000          0.000       0.000000       1197.305   \n",
       "4        12350.0       0.000000          0.000     334.400000          0.000   \n",
       "...          ...            ...            ...            ...            ...   \n",
       "5433     18283.0      92.696667        131.170     105.966667         97.675   \n",
       "5434     18284.0       0.000000          0.000       0.000000        456.365   \n",
       "5435     18285.0       0.000000          0.000       0.000000          0.000   \n",
       "5436     18286.0       0.000000          0.000       0.000000          0.000   \n",
       "5437     18287.0       0.000000        765.280       0.000000        376.185   \n",
       "\n",
       "      sales_avg_M_6  sales_avg_M_7  sales_avg_M_8  sales_avg_M_9  \\\n",
       "0              0.00       142.3100         23.410         22.700   \n",
       "1              0.00         0.0000          0.000          0.000   \n",
       "2            222.16         0.0000          0.000          0.000   \n",
       "3              0.00       556.6025          0.000          0.000   \n",
       "4              0.00         0.0000          0.000          0.000   \n",
       "...             ...            ...            ...            ...   \n",
       "5433          92.00         0.0000        118.140          0.000   \n",
       "5434           0.00         0.0000          0.000          0.000   \n",
       "5435           0.00         0.0000        421.685          0.000   \n",
       "5436         833.48         0.0000          0.000        457.635   \n",
       "5437         446.30      1071.6100          0.000          0.000   \n",
       "\n",
       "      sales_count_M_2  ...  sales_count_M_9  sales_sum_M_2  sales_sum_M_3  \\\n",
       "0                 0.0  ...              5.0           0.00           0.00   \n",
       "1                 1.0  ...              0.0         584.91        1018.77   \n",
       "2                 1.0  ...              0.0         310.00         367.00   \n",
       "3                 0.0  ...              0.0           0.00           0.00   \n",
       "4                 0.0  ...              0.0           0.00           0.00   \n",
       "...               ...  ...              ...            ...            ...   \n",
       "5433              3.0  ...              0.0         278.09         524.68   \n",
       "5434              0.0  ...              0.0           0.00           0.00   \n",
       "5435              0.0  ...              0.0           0.00           0.00   \n",
       "5436              0.0  ...              1.0           0.00           0.00   \n",
       "5437              0.0  ...              0.0           0.00         765.28   \n",
       "\n",
       "      sales_sum_M_4  sales_sum_M_5  sales_sum_M_6  sales_sum_M_7  \\\n",
       "0            264.68          0.000           0.00        142.310   \n",
       "1            475.39       2035.110           0.00          0.000   \n",
       "2            227.44        892.800         222.16          0.000   \n",
       "3              0.00       1197.305           0.00       1113.205   \n",
       "4            334.40          0.000           0.00          0.000   \n",
       "...             ...            ...            ...            ...   \n",
       "5433         317.90        195.350          92.00          0.000   \n",
       "5434           0.00        456.365           0.00          0.000   \n",
       "5435           0.00          0.000           0.00          0.000   \n",
       "5436           0.00          0.000         833.48          0.000   \n",
       "5437           0.00        376.185         892.60       1071.610   \n",
       "\n",
       "      sales_sum_M_8  sales_sum_M_9    CLV_3M  \n",
       "0           117.050        113.500     0.000  \n",
       "1             0.000          0.000  1519.140  \n",
       "2             0.000          0.000     0.000  \n",
       "3             0.000          0.000  1502.235  \n",
       "4             0.000          0.000     0.000  \n",
       "...             ...            ...       ...  \n",
       "5433        354.420          0.000   974.210  \n",
       "5434          0.000          0.000     0.000  \n",
       "5435        421.685          0.000     0.000  \n",
       "5436          0.000        457.635     0.000  \n",
       "5437          0.000          0.000  1072.000  \n",
       "\n",
       "[5438 rows x 26 columns]"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_sample_set = df_features.merge(\n",
    "                df_target, \n",
    "                left_on='CustomerID', \n",
    "                right_on='CustomerID',\n",
    "                how='left')\n",
    "\n",
    "df_sample_set.fillna(0, inplace=True)\n",
    "\n",
    "\n",
    "df_sample_set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "3d2efa73",
   "metadata": {},
   "outputs": [],
   "source": [
    "target_var = 'CLV_3M'\n",
    "all_features = [x for x in df_sample_set.columns if x not in ['CustomerID', target_var]]\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(\n",
    "                                    df_sample_set[all_features], \n",
    "                                    df_sample_set[target_var], \n",
    "                                    random_state=2,\n",
    "                                    test_size=0.35)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7400e8cd",
   "metadata": {},
   "source": [
    "## Training and Testing Models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "2f0d082f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean train set MAE for Huber Regression : 111.6422\n",
      "Mean train set R2 for Huber Regression : 0.8820\n",
      "Mean test sets MAE for Huber Regression : 114.1335\n",
      "Mean test sets R2 for Huber Regression : 0.7791\n"
     ]
    }
   ],
   "source": [
    "from sklearn import linear_model\n",
    "from sklearn.model_selection import cross_validate\n",
    "from math import sqrt\n",
    "scaler = MinMaxScaler()\n",
    "fit = scaler.fit(X_train)\n",
    "fitted_X_train = fit.transform(X_train)\n",
    "fitted_X_test = fit.transform(X_test)\n",
    "\n",
    "\n",
    "lasso = linear_model.Lasso()\n",
    "#huber.fit(X,y)\n",
    "#HuberRegressor()\n",
    "\n",
    "scores = cross_validate(lasso, fitted_X_train, y_train,scoring = ['neg_median_absolute_error', 'r2'], cv=4, return_train_score = True)\n",
    "print('Mean train set MAE for Huber Regression : {0:.4f}'.format(-scores['train_neg_median_absolute_error'].mean()))\n",
    "print('Mean train set R2 for Huber Regression : {0:.4f}'.format(scores['train_r2'].mean()))\n",
    "\n",
    "print('Mean test sets MAE for Huber Regression : {0:.4f}'.format(-scores['test_neg_median_absolute_error'].mean()))\n",
    "print('Mean test sets R2 for Huber Regression : {0:.4f}'.format(scores['test_r2'].mean()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "44cb5e3d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train set MedAE for alpha=0.0001 is 144.26435480040166\n",
      "Test set MedAE for alpha=0.0001 is 150.07931554393952\n",
      "Train set R2 for alpha=0.0001 is 0.8940007628328921\n",
      "Test set R2 for alpha=0.0001 is 0.6049410495461127\n",
      "Train set MedAE for alpha=0.001 is 144.26068848047478\n",
      "Test set MedAE for alpha=0.001 is 149.77207159945203\n",
      "Train set R2 for alpha=0.001 is 0.89400067206656\n",
      "Test set R2 for alpha=0.001 is 0.6051701090990194\n",
      "Train set MedAE for alpha=0.01 is 144.49082208215003\n",
      "Test set MedAE for alpha=0.01 is 148.15839360330386\n",
      "Train set R2 for alpha=0.01 is 0.8939915112717456\n",
      "Test set R2 for alpha=0.01 is 0.6074606408691021\n",
      "Train set MedAE for alpha=0.5 is 125.59428102528538\n",
      "Test set MedAE for alpha=0.5 is 134.88196234163058\n",
      "Train set R2 for alpha=0.5 is 0.8905066070050334\n",
      "Test set R2 for alpha=0.5 is 0.6364490162257992\n",
      "Train set MedAE for alpha=1 is 108.88784117604365\n",
      "Test set MedAE for alpha=1 is 119.36390056407112\n",
      "Train set R2 for alpha=1 is 0.8865508693166213\n",
      "Test set R2 for alpha=1 is 0.6413215374076229\n",
      "Train set MedAE for alpha=2 is 97.03437318671506\n",
      "Test set MedAE for alpha=2 is 108.86181041533297\n",
      "Train set R2 for alpha=2 is 0.8785258533028282\n",
      "Test set R2 for alpha=2 is 0.6522176689617929\n",
      "Train set MedAE for alpha=5 is 115.0960055953295\n",
      "Test set MedAE for alpha=5 is 121.21878771581865\n",
      "Train set R2 for alpha=5 is 0.8600576297969124\n",
      "Test set R2 for alpha=5 is 0.669058376019607\n",
      "Train set MedAE for alpha=8 is 127.20217016032424\n",
      "Test set MedAE for alpha=8 is 131.24023813285072\n",
      "Train set R2 for alpha=8 is 0.8428499728526049\n",
      "Test set R2 for alpha=8 is 0.6567409024565871\n",
      "Train set MedAE for alpha=10 is 131.1986308518036\n",
      "Test set MedAE for alpha=10 is 135.25571904586226\n",
      "Train set R2 for alpha=10 is 0.8299458243643456\n",
      "Test set R2 for alpha=10 is 0.6486898114179361\n",
      "Train set MedAE for alpha=13 is 139.63921680845743\n",
      "Test set MedAE for alpha=13 is 140.0181653950413\n",
      "Train set R2 for alpha=13 is 0.8066468321077902\n",
      "Test set R2 for alpha=13 is 0.6344511085835476\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Feature Name</th>\n",
       "      <th>Alpha = 0.000100</th>\n",
       "      <th>Alpha = 0.001000</th>\n",
       "      <th>Alpha = 0.010000</th>\n",
       "      <th>Alpha = 0.500000</th>\n",
       "      <th>Alpha = 1.000000</th>\n",
       "      <th>Alpha = 2.000000</th>\n",
       "      <th>Alpha = 5.000000</th>\n",
       "      <th>Alpha = 8.000000</th>\n",
       "      <th>Alpha = 10.000000</th>\n",
       "      <th>Alpha = 13.000000</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>sales_avg_M_2</td>\n",
       "      <td>-1275.075690</td>\n",
       "      <td>-1273.929620</td>\n",
       "      <td>-1261.968808</td>\n",
       "      <td>-929.124035</td>\n",
       "      <td>-552.006060</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>sales_avg_M_3</td>\n",
       "      <td>2530.743653</td>\n",
       "      <td>2521.816152</td>\n",
       "      <td>2428.448025</td>\n",
       "      <td>927.622009</td>\n",
       "      <td>260.463092</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>sales_avg_M_4</td>\n",
       "      <td>-2150.734216</td>\n",
       "      <td>-2143.719727</td>\n",
       "      <td>-2076.546291</td>\n",
       "      <td>-144.791203</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>sales_avg_M_5</td>\n",
       "      <td>-3029.416213</td>\n",
       "      <td>-3027.987425</td>\n",
       "      <td>-3015.578576</td>\n",
       "      <td>-2707.607040</td>\n",
       "      <td>-2374.295044</td>\n",
       "      <td>-1671.635813</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>sales_avg_M_6</td>\n",
       "      <td>-1011.051356</td>\n",
       "      <td>-1008.276578</td>\n",
       "      <td>-976.855720</td>\n",
       "      <td>-340.887286</td>\n",
       "      <td>-57.148748</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>sales_avg_M_7</td>\n",
       "      <td>-733.959928</td>\n",
       "      <td>-735.612350</td>\n",
       "      <td>-751.920222</td>\n",
       "      <td>-832.430799</td>\n",
       "      <td>-590.927392</td>\n",
       "      <td>-70.029341</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>sales_avg_M_8</td>\n",
       "      <td>175.752452</td>\n",
       "      <td>177.137211</td>\n",
       "      <td>191.081323</td>\n",
       "      <td>112.145234</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>sales_avg_M_9</td>\n",
       "      <td>2780.583489</td>\n",
       "      <td>2776.587472</td>\n",
       "      <td>2737.940056</td>\n",
       "      <td>1937.818239</td>\n",
       "      <td>1662.683384</td>\n",
       "      <td>928.913009</td>\n",
       "      <td>430.910082</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>sales_count_M_2</td>\n",
       "      <td>4536.583241</td>\n",
       "      <td>4532.696102</td>\n",
       "      <td>4495.774352</td>\n",
       "      <td>2044.385529</td>\n",
       "      <td>497.560357</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>sales_count_M_3</td>\n",
       "      <td>3730.639552</td>\n",
       "      <td>3718.576560</td>\n",
       "      <td>3593.456212</td>\n",
       "      <td>1607.948348</td>\n",
       "      <td>1352.213198</td>\n",
       "      <td>535.415455</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>sales_count_M_4</td>\n",
       "      <td>-1381.199813</td>\n",
       "      <td>-1376.566985</td>\n",
       "      <td>-1331.249083</td>\n",
       "      <td>-193.604816</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>33.840768</td>\n",
       "      <td>170.476658</td>\n",
       "      <td>205.326757</td>\n",
       "      <td>231.026848</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>sales_count_M_5</td>\n",
       "      <td>-2752.245175</td>\n",
       "      <td>-2739.779317</td>\n",
       "      <td>-2618.232127</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>sales_count_M_6</td>\n",
       "      <td>-2588.901860</td>\n",
       "      <td>-2587.602231</td>\n",
       "      <td>-2569.701065</td>\n",
       "      <td>-1816.831418</td>\n",
       "      <td>-1126.641306</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>sales_count_M_7</td>\n",
       "      <td>845.972552</td>\n",
       "      <td>836.821471</td>\n",
       "      <td>747.379490</td>\n",
       "      <td>-82.004907</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>sales_count_M_8</td>\n",
       "      <td>-2325.630219</td>\n",
       "      <td>-2321.508224</td>\n",
       "      <td>-2281.446144</td>\n",
       "      <td>-1285.263263</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>sales_count_M_9</td>\n",
       "      <td>-761.995464</td>\n",
       "      <td>-763.606645</td>\n",
       "      <td>-779.528522</td>\n",
       "      <td>-1123.802481</td>\n",
       "      <td>-1046.513846</td>\n",
       "      <td>-218.396014</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>sales_sum_M_2</td>\n",
       "      <td>23273.183995</td>\n",
       "      <td>23268.707769</td>\n",
       "      <td>23217.333527</td>\n",
       "      <td>24481.996652</td>\n",
       "      <td>24843.321256</td>\n",
       "      <td>24778.329909</td>\n",
       "      <td>26182.654044</td>\n",
       "      <td>26070.512890</td>\n",
       "      <td>24978.862487</td>\n",
       "      <td>22770.335905</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>sales_sum_M_3</td>\n",
       "      <td>-8667.499138</td>\n",
       "      <td>-8607.124090</td>\n",
       "      <td>-7985.134393</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1479.343240</td>\n",
       "      <td>3490.026970</td>\n",
       "      <td>4698.853656</td>\n",
       "      <td>693.779653</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>sales_sum_M_4</td>\n",
       "      <td>21745.238815</td>\n",
       "      <td>21695.632681</td>\n",
       "      <td>21204.184880</td>\n",
       "      <td>12295.921756</td>\n",
       "      <td>10735.384964</td>\n",
       "      <td>7242.366791</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>sales_sum_M_5</td>\n",
       "      <td>29135.964093</td>\n",
       "      <td>29119.106144</td>\n",
       "      <td>28961.358097</td>\n",
       "      <td>25787.991248</td>\n",
       "      <td>24867.104008</td>\n",
       "      <td>23184.432719</td>\n",
       "      <td>21232.123982</td>\n",
       "      <td>21212.022554</td>\n",
       "      <td>20551.385084</td>\n",
       "      <td>19344.647043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>sales_sum_M_6</td>\n",
       "      <td>2821.144355</td>\n",
       "      <td>2812.819466</td>\n",
       "      <td>2709.866398</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>sales_sum_M_7</td>\n",
       "      <td>-3735.613325</td>\n",
       "      <td>-3710.055295</td>\n",
       "      <td>-3460.653971</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>sales_sum_M_8</td>\n",
       "      <td>5684.158069</td>\n",
       "      <td>5657.711400</td>\n",
       "      <td>5397.871416</td>\n",
       "      <td>1776.302833</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>sales_sum_M_9</td>\n",
       "      <td>-3087.027348</td>\n",
       "      <td>-3069.292400</td>\n",
       "      <td>-2895.294493</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Feature Name  Alpha = 0.000100  Alpha = 0.001000  Alpha = 0.010000  \\\n",
       "0     sales_avg_M_2      -1275.075690      -1273.929620      -1261.968808   \n",
       "1     sales_avg_M_3       2530.743653       2521.816152       2428.448025   \n",
       "2     sales_avg_M_4      -2150.734216      -2143.719727      -2076.546291   \n",
       "3     sales_avg_M_5      -3029.416213      -3027.987425      -3015.578576   \n",
       "4     sales_avg_M_6      -1011.051356      -1008.276578       -976.855720   \n",
       "5     sales_avg_M_7       -733.959928       -735.612350       -751.920222   \n",
       "6     sales_avg_M_8        175.752452        177.137211        191.081323   \n",
       "7     sales_avg_M_9       2780.583489       2776.587472       2737.940056   \n",
       "8   sales_count_M_2       4536.583241       4532.696102       4495.774352   \n",
       "9   sales_count_M_3       3730.639552       3718.576560       3593.456212   \n",
       "10  sales_count_M_4      -1381.199813      -1376.566985      -1331.249083   \n",
       "11  sales_count_M_5      -2752.245175      -2739.779317      -2618.232127   \n",
       "12  sales_count_M_6      -2588.901860      -2587.602231      -2569.701065   \n",
       "13  sales_count_M_7        845.972552        836.821471        747.379490   \n",
       "14  sales_count_M_8      -2325.630219      -2321.508224      -2281.446144   \n",
       "15  sales_count_M_9       -761.995464       -763.606645       -779.528522   \n",
       "16    sales_sum_M_2      23273.183995      23268.707769      23217.333527   \n",
       "17    sales_sum_M_3      -8667.499138      -8607.124090      -7985.134393   \n",
       "18    sales_sum_M_4      21745.238815      21695.632681      21204.184880   \n",
       "19    sales_sum_M_5      29135.964093      29119.106144      28961.358097   \n",
       "20    sales_sum_M_6       2821.144355       2812.819466       2709.866398   \n",
       "21    sales_sum_M_7      -3735.613325      -3710.055295      -3460.653971   \n",
       "22    sales_sum_M_8       5684.158069       5657.711400       5397.871416   \n",
       "23    sales_sum_M_9      -3087.027348      -3069.292400      -2895.294493   \n",
       "\n",
       "    Alpha = 0.500000  Alpha = 1.000000  Alpha = 2.000000  Alpha = 5.000000  \\\n",
       "0        -929.124035       -552.006060         -0.000000          0.000000   \n",
       "1         927.622009        260.463092          0.000000          0.000000   \n",
       "2        -144.791203         -0.000000          0.000000          0.000000   \n",
       "3       -2707.607040      -2374.295044      -1671.635813         -0.000000   \n",
       "4        -340.887286        -57.148748         -0.000000          0.000000   \n",
       "5        -832.430799       -590.927392        -70.029341          0.000000   \n",
       "6         112.145234          0.000000          0.000000          0.000000   \n",
       "7        1937.818239       1662.683384        928.913009        430.910082   \n",
       "8        2044.385529        497.560357          0.000000          0.000000   \n",
       "9        1607.948348       1352.213198        535.415455          0.000000   \n",
       "10       -193.604816         -0.000000          0.000000         33.840768   \n",
       "11         -0.000000         -0.000000          0.000000          0.000000   \n",
       "12      -1816.831418      -1126.641306         -0.000000          0.000000   \n",
       "13        -82.004907         -0.000000         -0.000000          0.000000   \n",
       "14      -1285.263263         -0.000000         -0.000000          0.000000   \n",
       "15      -1123.802481      -1046.513846       -218.396014         -0.000000   \n",
       "16      24481.996652      24843.321256      24778.329909      26182.654044   \n",
       "17          0.000000       1479.343240       3490.026970       4698.853656   \n",
       "18      12295.921756      10735.384964       7242.366791          0.000000   \n",
       "19      25787.991248      24867.104008      23184.432719      21232.123982   \n",
       "20          0.000000          0.000000          0.000000          0.000000   \n",
       "21          0.000000          0.000000          0.000000          0.000000   \n",
       "22       1776.302833          0.000000          0.000000          0.000000   \n",
       "23          0.000000          0.000000          0.000000          0.000000   \n",
       "\n",
       "    Alpha = 8.000000  Alpha = 10.000000  Alpha = 13.000000  \n",
       "0           0.000000           0.000000           0.000000  \n",
       "1           0.000000           0.000000           0.000000  \n",
       "2           0.000000           0.000000           0.000000  \n",
       "3          -0.000000           0.000000           0.000000  \n",
       "4           0.000000           0.000000           0.000000  \n",
       "5           0.000000           0.000000           0.000000  \n",
       "6           0.000000           0.000000           0.000000  \n",
       "7           0.000000           0.000000           0.000000  \n",
       "8           0.000000           0.000000           0.000000  \n",
       "9           0.000000           0.000000           0.000000  \n",
       "10        170.476658         205.326757         231.026848  \n",
       "11          0.000000           0.000000           0.000000  \n",
       "12          0.000000           0.000000           0.000000  \n",
       "13          0.000000           0.000000           0.000000  \n",
       "14          0.000000           0.000000           0.000000  \n",
       "15          0.000000           0.000000           0.000000  \n",
       "16      26070.512890       24978.862487       22770.335905  \n",
       "17        693.779653           0.000000           0.000000  \n",
       "18          0.000000           0.000000           0.000000  \n",
       "19      21212.022554       20551.385084       19344.647043  \n",
       "20          0.000000           0.000000           0.000000  \n",
       "21          0.000000           0.000000           0.000000  \n",
       "22          0.000000           0.000000           0.000000  \n",
       "23          0.000000           0.000000           0.000000  "
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import r2_score\n",
    "import seaborn as sns\n",
    "from statsmodels.formula.api import ols\n",
    "from sklearn.metrics import r2_score, median_absolute_error\n",
    "\n",
    "train_medae = []\n",
    "test_medae = []\n",
    "\n",
    "# Create a function called lasso,\n",
    "def lasso(X_train, y_train, alphas, X_test, y_test):\n",
    "    '''\n",
    "    Takes in a list of alphas. Outputs a dataframe containing the coefficients of lasso regressions from each alpha.\n",
    "    '''\n",
    "    # Create an empty data frame\n",
    "    df = pd.DataFrame()\n",
    "    \n",
    "    # Create a column of feature names\n",
    "    df['Feature Name'] = all_features\n",
    "    \n",
    "    # For each alpha value in the list of alpha values,\n",
    "    for alpha in alphas:\n",
    "        # Create a lasso regression with that alpha value,\n",
    "        lasso = Lasso(alpha=alpha)\n",
    "        \n",
    "        # Fit the lasso regression\n",
    "        lasso.fit(X_train, y_train)\n",
    "        \n",
    "        yhat_train = lasso.predict(X_train)\n",
    "        yhat_test = lasso.predict(X_test)\n",
    "        \n",
    "        # Create a column name for that alpha value\n",
    "        column_name = 'Alpha = %f' % alpha\n",
    "\n",
    "        # Create a column of coefficient values\n",
    "        df[column_name] = lasso.coef_\n",
    "        \n",
    "        print('Train set MedAE for alpha=' + str(alpha) + ' is '+ str(median_absolute_error(y_true=y_train, y_pred=yhat_train)))\n",
    "        print('Test set MedAE for alpha=' + str(alpha) + ' is ' + str(median_absolute_error(y_true=y_test, y_pred=yhat_test)))\n",
    "        print('Train set R2 for alpha=' + str(alpha) + ' is ' + str(r2_score(y_train, yhat_train)))\n",
    "        print('Test set R2 for alpha=' + str(alpha) + ' is ' + str(r2_score(y_test, yhat_test)))\n",
    "        \n",
    "        train_medae.append(median_absolute_error(y_true=y_train, y_pred=yhat_train))\n",
    "        test_medae.append(median_absolute_error(y_true=y_test, y_pred=yhat_test))\n",
    "                \n",
    "    # Return the dataframe\n",
    "    return df\n",
    "\n",
    "lasso(fitted_X_train, y_train, [.0001, .001, .01, .5, 1, 2, 5, 8, 10, 13], fitted_X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "a1c03e41",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[150.07931554393952,\n",
       " 149.77207159945203,\n",
       " 148.15839360330386,\n",
       " 134.88196234163058,\n",
       " 119.36390056407112,\n",
       " 108.86181041533297,\n",
       " 121.21878771581865,\n",
       " 131.24023813285072,\n",
       " 135.25571904586226,\n",
       " 140.0181653950413]"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_medae"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "dbc90816",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7fd551b2fe20>"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    " x = [.0001, .001, .01, .5, 1, 2, 5, 8, 10, 13]\n",
    "# y1 = train_medae\n",
    "# y2 = test_medae\n",
    "# # plot lines\n",
    "# ax.plot(x, y1, label = \"Train set MedAE score\")\n",
    "# ax.plot(x, y2, label = \"Test set MedAE score\")\n",
    "# plt.xticks(range(len(x)), x, rotation=45)\n",
    "# plt.legend()\n",
    "# plt.show()\n",
    "\n",
    "f, ax = plt.subplots()\n",
    "\n",
    "x1 = [str(a) for a in x]\n",
    "l = range(len(x))\n",
    "y1 = train_medae\n",
    "y2 = test_medae\n",
    "\n",
    "ax.plot(l, y1, label = \"Train set MedAE score\")\n",
    "ax.plot(l, y2, label = \"Test set MedAE score\")\n",
    "ax.set_xticks(l)\n",
    "ax.set_xticklabels(x1)\n",
    "# ax.set_labels(x='Alpha (Penalty)', y='MedAE score')\n",
    "ax.set_xlabel('Alpha (LASSO Penalty)')\n",
    "ax.set_ylabel('MedAE score')\n",
    "\n",
    "ax.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "2c034753",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0, 0, '0.0001'),\n",
       " Text(1, 0, '0.001'),\n",
       " Text(2, 0, '0.01'),\n",
       " Text(3, 0, '0.5'),\n",
       " Text(4, 0, '1'),\n",
       " Text(5, 0, '2'),\n",
       " Text(6, 0, '5'),\n",
       " Text(7, 0, '8'),\n",
       " Text(8, 0, '10'),\n",
       " Text(9, 0, '13')]"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABIYAAAD7CAYAAAAfHJ8MAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAABokUlEQVR4nO3dd3zV5dk/8M/ZeyRnJicJGRASEiCQsJcoQ5YoDnBRtVY7bG37FB8Hv1L71A6ltrXa2j71cdtKUUGGqBUn4iAoiISVECB7j3OSs7+/P87JScIQEk5yMj7v18tX1jdfr3OT+cl1X7dIEAQBREREREREREQ07IhjXQAREREREREREcUGgyEiIiIiIiIiomGKwRARERERERER0TDFYIiIiIiIiIiIaJhiMERERERERERENExJY11Ah2AwCJfLBZlMBpFIFOtyiIiIiIiIiIgGPUEQ4PP5oNFoIBaf2R80YIIhl8uFI0eOxLoMIiIiIiIiIqIhJzMzEzqd7ozXD5hgSCaTAQgVKpfLY1zNxTtw4AByc3NjXcagw3XrHa5b73Ddeofr1jtct97huvUO1613uG69w3UjIhrYvF4vjhw5EsldTjdggqGO7WNyuRwKhSLG1UTHUHkc/Y3r1jtct97huvUO1613uG69w3XrHa5b73DdeofrRkQ08J1rbA+HTxMRERERERERDVMMhoiIiIiIiIiIhikGQ0REREREREREw9QFBUNOpxNLly5FWVkZAOC+++7DggULsHz5cixfvhxvv/02AKCoqAgrVqzAwoUL8cADD8Dv9/dd5UREREREREREdFHOGwzt27cP119/PUpLSyOvO3DgAF544QVs3rwZmzdvxvz58wEAa9aswc9//nO8+eabEAQBGzZs6LPCiYiIiIiIiIjo4pw3GNqwYQPWrVsHq9UKAGhvb0dFRQXuv/9+LFu2DI899hiCwSDKy8vhdruRl5cHAFixYgV27NjRp8UTEREREREREVHvnfe4+oceeqjby3V1dZg6dSrWrVsHnU6HO++8Exs3bsSoUaNgsVgi11ksFlRXV0e/4kGg8sVfQK5NAfLzY10KEREREREREdE5nTcYOl1ycjKeeOKJyMs333wzNm3ahIyMDIhEosjrBUHo9vKFOnDgQI/fZ6AxVJRAapWgsLAw1qUMSly33uG69Q7XrXe4br3Ddesdrlvv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REQ9MLSTiV6y2+3dhkPX1tZ22zpx+tvr6upgtVoRHx+P1tZWBAKBM97ParWirq4OAOD3++FyuWA0Gvvh0cROX6zjcNPbNaRO51vDiooKbNy4MfKyIAiRbjWiaCgsLMQtt9yC//qv/8JVV10V63IGhT179mD37t2Rl/l5eeE++ugjTJs2DSaTCXK5HCtWrMBnn30W67IGhfN9v6Czq6ysRGFhIYBQV/ySJUtw+PDhGFdFREQ9wWDoLKZPn47du3ejoaEB7e3teOuttzB79uzI2x0OBxQKReSb4ObNmzF79mzIZDIUFBRg+/btAIBNmzZF3m/OnDnYtGkTAGD79u0oKCiATCbr3wfWz/piHYeb3q4hdTrfGiqVSjzyyCM4deoUBEHAiy++iPnz58ewYhpKKisr8YMf/ADr16/HkiVLYl3OoNHa2oqHH34YHo8HTqcTr732Gj8vL1BWVhY+/vhjtLW1QRAE7Ny5E2PHjo11WYPC+PHjcfz4cZw4cQKBQABbt27l99QL0NraijVr1qClpQWCIODNN99Efn5+rMsiIqIe4J/fzsJms+EnP/kJVq9eDZ/Ph2uuuQbjxo3Dd77zHfzoRz/C2LFjsX79eqxduxZOpxM5OTlYvXo1AGDdunW499578de//hUJCQl49NFHAQB333037r33XixZsgQ6nQ7r16+P5UPsF32xjsPNxawhhVzIGv7yl7/E9773Pfh8PkycOHHYD+ym6Hnqqafg8Xjw29/+NvK6VatW4frrr49hVQPf3LlzsW/fPlx55ZUIBoO44YYbMGHChFiXNSjMnDkTBw8exIoVKyCTyTB27FjccccdsS5rUFAoFPjtb3+LH/7wh/B4PJgzZw4uv/zyWJc14GVmZuKOO+7AqlWrIJFIUFBQwO+jRESDjEgQBCHWRRARERERERERUf/jVjIiIiIiIiIiomGKwRARERERERER0TDFYIiIiIiIiIiIaJhiMERERERERERENEwxGCIiIiIiIiIiGqYYDBERERERERERDVMMhoiIiIiIiIiIhikGQ0REREREREREw9T/B2YufGcji7CpAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 1440x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "f, ax = plt.subplots()\n",
    "\n",
    "ax.plot(x, y1, label = \"Train set MedAE score\")\n",
    "ax.plot(x, y2, label = \"Test set MedAE score\")\n",
    "\n",
    "ax.set_xticks(range(len(x)))\n",
    "ax.set_xticklabels(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "afd412db",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                 OLS Regression Results                                \n",
      "=======================================================================================\n",
      "Dep. Variable:                 CLV_3M   R-squared (uncentered):                   0.896\n",
      "Model:                            OLS   Adj. R-squared (uncentered):              0.895\n",
      "Method:                 Least Squares   F-statistic:                              1260.\n",
      "Date:                Sun, 04 Sep 2022   Prob (F-statistic):                        0.00\n",
      "Time:                        20:17:21   Log-Likelihood:                         -27635.\n",
      "No. Observations:                3534   AIC:                                  5.532e+04\n",
      "Df Residuals:                    3510   BIC:                                  5.547e+04\n",
      "Df Model:                          24                                                  \n",
      "Covariance Type:            nonrobust                                                  \n",
      "===================================================================================\n",
      "                      coef    std err          t      P>|t|      [0.025      0.975]\n",
      "-----------------------------------------------------------------------------------\n",
      "sales_avg_M_2      -0.2278      0.042     -5.446      0.000      -0.310      -0.146\n",
      "sales_avg_M_3       0.4006      0.060      6.696      0.000       0.283       0.518\n",
      "sales_avg_M_4      -0.2241      0.056     -4.016      0.000      -0.334      -0.115\n",
      "sales_avg_M_5      -0.4899      0.042    -11.611      0.000      -0.573      -0.407\n",
      "sales_avg_M_6      -0.1080      0.051     -2.110      0.035      -0.208      -0.008\n",
      "sales_avg_M_7      -0.0997      0.047     -2.114      0.035      -0.192      -0.007\n",
      "sales_avg_M_8       0.0391      0.053      0.736      0.462      -0.065       0.143\n",
      "sales_avg_M_9       0.6826      0.087      7.829      0.000       0.512       0.854\n",
      "sales_count_M_2   100.9577     12.198      8.276      0.000      77.041     124.875\n",
      "sales_count_M_3          0     13.010          0      1.000     -25.509      25.509\n",
      "sales_count_M_4          0     14.214          0      1.000     -27.868      27.868\n",
      "sales_count_M_5          0      9.020          0      1.000     -17.685      17.685\n",
      "sales_count_M_6   -58.9016     12.087     -4.873      0.000     -82.599     -35.204\n",
      "sales_count_M_7    28.5755     13.357      2.139      0.032       2.387      54.764\n",
      "sales_count_M_8   -60.9140     13.309     -4.577      0.000     -87.009     -34.819\n",
      "sales_count_M_9   -35.3495     22.604     -1.564      0.118     -79.668       8.969\n",
      "sales_sum_M_2       0.3385      0.016     20.832      0.000       0.307       0.370\n",
      "sales_sum_M_3      -0.0709      0.031     -2.271      0.023      -0.132      -0.010\n",
      "sales_sum_M_4       0.2599      0.030      8.775      0.000       0.202       0.318\n",
      "sales_sum_M_5       0.4946      0.019     25.791      0.000       0.457       0.532\n",
      "sales_sum_M_6       0.0638      0.026      2.474      0.013       0.013       0.114\n",
      "sales_sum_M_7      -0.1028      0.026     -3.964      0.000      -0.154      -0.052\n",
      "sales_sum_M_8       0.1175      0.026      4.579      0.000       0.067       0.168\n",
      "sales_sum_M_9      -0.1987      0.059     -3.378      0.001      -0.314      -0.083\n",
      "==============================================================================\n",
      "Omnibus:                     3454.914   Durbin-Watson:                   1.992\n",
      "Prob(Omnibus):                  0.000   Jarque-Bera (JB):          1061209.538\n",
      "Skew:                           4.043   Prob(JB):                         0.00\n",
      "Kurtosis:                      87.507   Cond. No.                     9.19e+03\n",
      "==============================================================================\n",
      "\n",
      "Notes:\n",
      "[1] RÂ² is computed without centering (uncentered) since the model does not contain a constant.\n",
      "[2] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
      "[3] The condition number is large, 9.19e+03. This might indicate that there are\n",
      "strong multicollinearity or other numerical problems.\n",
      "Train set MedAE for alpha=2 is 117.84163061858057\n",
      "Test set MedAE for alpha=2 is 123.38596548637386\n",
      "Train set R2 for alpha=2 is 0.8915771524934611\n",
      "Test set R2 for alpha=2 is 0.6145084876528397\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Lasso\n",
    "\n",
    "from sklearn.metrics import r2_score\n",
    "import seaborn as sns\n",
    "import statsmodels.api as sm\n",
    "from statsmodels.tools.tools import pinv_extended\n",
    "# Create a function called lasso,\n",
    "def lasso(X_train, y_train, alphas, X_test, y_test):\n",
    "    '''\n",
    "    Takes in a list of alphas. Outputs a dataframe containing the coefficients of lasso regressions from each alpha.\n",
    "    '''\n",
    "    # For each alpha value in the list of alpha values,\n",
    "    for alpha in alphas:\n",
    "#         # Create a lasso regression with that alpha value,\n",
    "#         lasso = Lasso(alpha=alpha)\n",
    "        \n",
    "#         # Fit the lasso regression\n",
    "#         lasso.fit(X_train, y_train)\n",
    "        \n",
    "#         yhat_train = lasso.predict(X_train)\n",
    "#         yhat_test = lasso.predict(X_test)\n",
    "        \n",
    "#         # Create a column name for that alpha value\n",
    "#         column_name = 'Alpha = %f' % alpha\n",
    "\n",
    "#         # Create a column of coefficient values\n",
    "#         df[column_name] = lasso.coef_\n",
    "        model = sm.OLS(y_train, X_train)\n",
    "        result = model.fit_regularized(\n",
    "                            method = 'elastic_net',\n",
    "                            alpha = alpha,\n",
    "                            L1_wt = 1,\n",
    "                            #refit = True,\n",
    "                            refit = False,\n",
    "                            )\n",
    "        pinv_wexog,_ = pinv_extended(model.wexog)\n",
    "        normalized_cov_params = np.dot(pinv_wexog, np.transpose(pinv_wexog))\n",
    "        final = sm.regression.linear_model.OLSResults(model, \n",
    "                                          result.params, \n",
    "                                          normalized_cov_params)\n",
    "        print(final.summary())\n",
    "        yhat_train = final.predict(X_train)\n",
    "        yhat_test = final.predict(X_test)\n",
    "\n",
    "\n",
    "#         ols_df = pd.concat([X_train,y_train], axis=1)\n",
    "        \n",
    "#         linear_model = ols(ols_df.columns[-1] + ' ~ .' , data=ols_df, alpha=alpha, L1_wt=1).fit()\n",
    "  \n",
    "#         # display model summary\n",
    "#         print(linear_model.summary())\n",
    "\n",
    "#         # modify figure size\n",
    "#         fig = plt.figure(figsize=(14, 8))\n",
    "\n",
    "#         # creating regression plots\n",
    "#         fig = sm.graphics.plot_regress_exog(linear_model,\n",
    "#                                             'Head_size',\n",
    "#                                             fig=fig)\n",
    "        \n",
    "#         yhat_train = linear_model.predict(X_train)\n",
    "#         yhat_test = linear_model.predict(X_test)\n",
    "        \n",
    "        print('Train set MedAE for alpha=' + str(alpha) + ' is '+ str(median_absolute_error(y_true=y_train, y_pred=yhat_train)))\n",
    "        print('Test set MedAE for alpha=' + str(alpha) + ' is ' + str(median_absolute_error(y_true=y_test, y_pred=yhat_test)))\n",
    "        print('Train set R2 for alpha=' + str(alpha) + ' is ' + str(r2_score(y_train, yhat_train)))\n",
    "        print('Test set R2 for alpha=' + str(alpha) + ' is ' + str(r2_score(y_test, yhat_test)))\n",
    "        \n",
    "        sns.regplot(x = y_test - yhat_test, y = yhat_test, data = None)\n",
    "        \n",
    "# lasso(fitted_X_train, y_train, [.0001, .5, 2, 10, 11], fitted_X_test, y_test)\n",
    "lasso(X_train, y_train, [2], X_test, y_test)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "10d612f5",
   "metadata": {},
   "source": [
    "## Additional Code for Reference"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "7046ebf8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "83.88274973911041"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "from sklearn.linear_model import Ridge, Lasso\n",
    "from sklearn.metrics import mean_squared_error,r2_score\n",
    "from sklearn.model_selection import train_test_split, cross_val_score\n",
    "from sklearn import model_selection\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.linear_model import RidgeCV, LassoCV\n",
    "\n",
    "lasso_model = Lasso().fit(X_train,y_train)\n",
    "\n",
    "lasso_model.intercept_\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "8d90fc2a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([-2.77102129e-01,  3.61810856e-01, -2.32345514e-01, -5.36751250e-01,\n",
       "       -1.46520214e-01, -1.39935992e-01,  3.80240512e-02,  6.73437282e-01,\n",
       "        7.93278148e+01,  7.93480720e+01, -5.24285912e+01, -3.36346654e+01,\n",
       "       -4.20709683e+01,  1.91521153e+01, -5.36562298e+01, -4.62605598e+01,\n",
       "        3.63234249e-01, -1.56647040e-01,  3.18527346e-01,  5.30794627e-01,\n",
       "        4.14302413e-02, -8.11942803e-02,  9.14723391e-02, -1.71750076e-01])"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lasso_model.coef_\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "56666e0f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Coefficients for different lambda values.\n",
    "\n",
    "lasso = Lasso()\n",
    "coefs = []\n",
    "alphas = np.random.randint(0,1000,100)\n",
    "\n",
    "# 10**np.linspace(10,-2,100)*0.5 -- It can be used instead of alphas and observed.\n",
    "\n",
    "for a in alphas:\n",
    "    lasso.set_params(alpha = a)\n",
    "    lasso.fit(X_train,y_train)\n",
    "    coefs.append(lasso.coef_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "a699fae0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = plt.gca()\n",
    "\n",
    "ax.plot(alphas, coefs)\n",
    "ax.set_xscale(\"log\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "ac854c7f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ -49.85845827,  125.24843382, 7538.64935784,  184.38442354,\n",
       "        187.75284692])"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lasso_model.predict(X_train)[:5]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "d1e7d40f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([  41.41769406,   12.93305691,  502.00926079, 3352.61590266,\n",
       "        -29.52329213])"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lasso_model.predict(X_test)[:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "a2b00216",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "y_pred_lasso = lasso_model.predict(X_test)\n",
    "train_preds_lasso = lasso_model.predict(X_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "fdfe1837",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train RMSE with Lasso : 595.5464399572727\n",
      "Test RMSE with Lasso : 1479.944129870166\n"
     ]
    }
   ],
   "source": [
    "# Train RMSE\n",
    "print(\"Train RMSE with Lasso : \"+str(np.sqrt(mean_squared_error(y_train,train_preds_lasso))))\n",
    "\n",
    "# test RMSE\n",
    "print(\"Test RMSE with Lasso : \"+str(np.sqrt(mean_squared_error(y_test,y_pred_lasso))))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "992e6fc7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R-Squared for Train set: 0.89\n",
      "R-Squared for Test set: 0.61\n"
     ]
    }
   ],
   "source": [
    "print('R-Squared for Train set: %0.2f' % r2_score(y_true=y_train, y_pred=train_preds_lasso))\n",
    "print('R-Squared for Test set: %0.2f' % r2_score(y_true=y_test, y_pred=y_pred_lasso))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "37d41f61",
   "metadata": {},
   "source": [
    "### Cross Validation "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "e12f5aec",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean train set RMSE for Lasso() Regression : 610.2531\n",
      "Mean train set R2 for Lasso() Regression : 0.8847\n",
      "Mean test sets RMSE for Lasso() Regression : 679.1716\n",
      "Mean test sets R2 for Lasso() Regression : 0.8441\n"
     ]
    }
   ],
   "source": [
    "scaler = MinMaxScaler()\n",
    "fit = scaler.fit(X_train)\n",
    "fitted_X_train = fit.transform(X_train)\n",
    "fitted_X_test = fit.transform(X_test)\n",
    "\n",
    "huber = Lasso()\n",
    "#huber.fit(X,y)\n",
    "#HuberRegressor()\n",
    "\n",
    "scores = cross_validate(huber, fitted_X_train, y_train,scoring = \\\n",
    "                        ['neg_mean_squared_error', 'r2'], cv=3, return_train_score = True)\n",
    "\n",
    "\n",
    "print('Mean train set RMSE for '+str(huber)+' Regression : {0:.4f}'.format(math.sqrt(-scores['train_neg_mean_squared_error'].mean())))\n",
    "print('Mean train set R2 for '+str(huber)+' Regression : {0:.4f}'.format(scores['train_r2'].mean()))\n",
    "\n",
    "print('Mean test sets RMSE for '+str(huber)+' Regression : {0:.4f}'.format(math.sqrt(-scores['test_neg_mean_squared_error'].mean())))\n",
    "print('Mean test sets R2 for '+str(huber)+' Regression : {0:.4f}'.format(scores['test_r2'].mean()))\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "43c93877",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.3876627051499717"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sum(y_train>0)/len(y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "e065089e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.3939075630252101"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sum(y_test>0)/len(y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7f4f1eda",
   "metadata": {},
   "source": [
    "## Classification"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "b0501d18",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['CustomerID', 'sales_avg_M_2', 'sales_avg_M_3', 'sales_avg_M_4',\n",
       "       'sales_avg_M_5', 'sales_avg_M_6', 'sales_avg_M_7', 'sales_avg_M_8',\n",
       "       'sales_avg_M_9', 'sales_count_M_2', 'sales_count_M_3',\n",
       "       'sales_count_M_4', 'sales_count_M_5', 'sales_count_M_6',\n",
       "       'sales_count_M_7', 'sales_count_M_8', 'sales_count_M_9',\n",
       "       'sales_sum_M_2', 'sales_sum_M_3', 'sales_sum_M_4', 'sales_sum_M_5',\n",
       "       'sales_sum_M_6', 'sales_sum_M_7', 'sales_sum_M_8', 'sales_sum_M_9',\n",
       "       'CLV_3M'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_sample_set.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "b69e65f3",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(\n",
    "                                    df_sample_set[all_features], \n",
    "                                    df_sample_set[target_var], \n",
    "                                    random_state=2,\n",
    "                                    test_size=0.35)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "f7e2920b",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_classification = df_sample_set.copy()\n",
    "df_classification['CLV_3M']=df_classification['CLV_3M'].apply(lambda x: 1 if x >0 else 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "8e86d2e2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>sales_avg_M_2</th>\n",
       "      <th>sales_avg_M_3</th>\n",
       "      <th>sales_avg_M_4</th>\n",
       "      <th>sales_avg_M_5</th>\n",
       "      <th>sales_avg_M_6</th>\n",
       "      <th>sales_avg_M_7</th>\n",
       "      <th>sales_avg_M_8</th>\n",
       "      <th>sales_avg_M_9</th>\n",
       "      <th>sales_count_M_2</th>\n",
       "      <th>...</th>\n",
       "      <th>sales_count_M_9</th>\n",
       "      <th>sales_sum_M_2</th>\n",
       "      <th>sales_sum_M_3</th>\n",
       "      <th>sales_sum_M_4</th>\n",
       "      <th>sales_sum_M_5</th>\n",
       "      <th>sales_sum_M_6</th>\n",
       "      <th>sales_sum_M_7</th>\n",
       "      <th>sales_sum_M_8</th>\n",
       "      <th>sales_sum_M_9</th>\n",
       "      <th>CLV_3M</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>264.680000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>142.3100</td>\n",
       "      <td>23.410</td>\n",
       "      <td>22.700</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>264.68</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>142.310</td>\n",
       "      <td>117.050</td>\n",
       "      <td>113.500</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>12347.0</td>\n",
       "      <td>584.910000</td>\n",
       "      <td>509.385</td>\n",
       "      <td>475.390000</td>\n",
       "      <td>1017.555</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>584.91</td>\n",
       "      <td>1018.77</td>\n",
       "      <td>475.39</td>\n",
       "      <td>2035.110</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>12348.0</td>\n",
       "      <td>310.000000</td>\n",
       "      <td>367.000</td>\n",
       "      <td>227.440000</td>\n",
       "      <td>892.800</td>\n",
       "      <td>222.16</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>310.00</td>\n",
       "      <td>367.00</td>\n",
       "      <td>227.44</td>\n",
       "      <td>892.800</td>\n",
       "      <td>222.16</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>12349.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1197.305</td>\n",
       "      <td>0.00</td>\n",
       "      <td>556.6025</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1197.305</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1113.205</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12350.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>334.400000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>334.40</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5433</th>\n",
       "      <td>18283.0</td>\n",
       "      <td>92.696667</td>\n",
       "      <td>131.170</td>\n",
       "      <td>105.966667</td>\n",
       "      <td>97.675</td>\n",
       "      <td>92.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>118.140</td>\n",
       "      <td>0.000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>278.09</td>\n",
       "      <td>524.68</td>\n",
       "      <td>317.90</td>\n",
       "      <td>195.350</td>\n",
       "      <td>92.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>354.420</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5434</th>\n",
       "      <td>18284.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>456.365</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>456.365</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5435</th>\n",
       "      <td>18285.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>421.685</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>421.685</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5436</th>\n",
       "      <td>18286.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>833.48</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>457.635</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>833.48</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>457.635</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5437</th>\n",
       "      <td>18287.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>765.280</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>376.185</td>\n",
       "      <td>446.30</td>\n",
       "      <td>1071.6100</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>765.28</td>\n",
       "      <td>0.00</td>\n",
       "      <td>376.185</td>\n",
       "      <td>892.60</td>\n",
       "      <td>1071.610</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5438 rows Ã— 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      CustomerID  sales_avg_M_2  sales_avg_M_3  sales_avg_M_4  sales_avg_M_5  \\\n",
       "0        12346.0       0.000000          0.000     264.680000          0.000   \n",
       "1        12347.0     584.910000        509.385     475.390000       1017.555   \n",
       "2        12348.0     310.000000        367.000     227.440000        892.800   \n",
       "3        12349.0       0.000000          0.000       0.000000       1197.305   \n",
       "4        12350.0       0.000000          0.000     334.400000          0.000   \n",
       "...          ...            ...            ...            ...            ...   \n",
       "5433     18283.0      92.696667        131.170     105.966667         97.675   \n",
       "5434     18284.0       0.000000          0.000       0.000000        456.365   \n",
       "5435     18285.0       0.000000          0.000       0.000000          0.000   \n",
       "5436     18286.0       0.000000          0.000       0.000000          0.000   \n",
       "5437     18287.0       0.000000        765.280       0.000000        376.185   \n",
       "\n",
       "      sales_avg_M_6  sales_avg_M_7  sales_avg_M_8  sales_avg_M_9  \\\n",
       "0              0.00       142.3100         23.410         22.700   \n",
       "1              0.00         0.0000          0.000          0.000   \n",
       "2            222.16         0.0000          0.000          0.000   \n",
       "3              0.00       556.6025          0.000          0.000   \n",
       "4              0.00         0.0000          0.000          0.000   \n",
       "...             ...            ...            ...            ...   \n",
       "5433          92.00         0.0000        118.140          0.000   \n",
       "5434           0.00         0.0000          0.000          0.000   \n",
       "5435           0.00         0.0000        421.685          0.000   \n",
       "5436         833.48         0.0000          0.000        457.635   \n",
       "5437         446.30      1071.6100          0.000          0.000   \n",
       "\n",
       "      sales_count_M_2  ...  sales_count_M_9  sales_sum_M_2  sales_sum_M_3  \\\n",
       "0                 0.0  ...              5.0           0.00           0.00   \n",
       "1                 1.0  ...              0.0         584.91        1018.77   \n",
       "2                 1.0  ...              0.0         310.00         367.00   \n",
       "3                 0.0  ...              0.0           0.00           0.00   \n",
       "4                 0.0  ...              0.0           0.00           0.00   \n",
       "...               ...  ...              ...            ...            ...   \n",
       "5433              3.0  ...              0.0         278.09         524.68   \n",
       "5434              0.0  ...              0.0           0.00           0.00   \n",
       "5435              0.0  ...              0.0           0.00           0.00   \n",
       "5436              0.0  ...              1.0           0.00           0.00   \n",
       "5437              0.0  ...              0.0           0.00         765.28   \n",
       "\n",
       "      sales_sum_M_4  sales_sum_M_5  sales_sum_M_6  sales_sum_M_7  \\\n",
       "0            264.68          0.000           0.00        142.310   \n",
       "1            475.39       2035.110           0.00          0.000   \n",
       "2            227.44        892.800         222.16          0.000   \n",
       "3              0.00       1197.305           0.00       1113.205   \n",
       "4            334.40          0.000           0.00          0.000   \n",
       "...             ...            ...            ...            ...   \n",
       "5433         317.90        195.350          92.00          0.000   \n",
       "5434           0.00        456.365           0.00          0.000   \n",
       "5435           0.00          0.000           0.00          0.000   \n",
       "5436           0.00          0.000         833.48          0.000   \n",
       "5437           0.00        376.185         892.60       1071.610   \n",
       "\n",
       "      sales_sum_M_8  sales_sum_M_9  CLV_3M  \n",
       "0           117.050        113.500       0  \n",
       "1             0.000          0.000       1  \n",
       "2             0.000          0.000       0  \n",
       "3             0.000          0.000       1  \n",
       "4             0.000          0.000       0  \n",
       "...             ...            ...     ...  \n",
       "5433        354.420          0.000       1  \n",
       "5434          0.000          0.000       0  \n",
       "5435        421.685          0.000       0  \n",
       "5436          0.000        457.635       0  \n",
       "5437          0.000          0.000       1  \n",
       "\n",
       "[5438 rows x 26 columns]"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_classification"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "02ae3205",
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_ROC(Y_test, Y_test_pred, classifier):\n",
    "    fpr, tpr, _ = metrics.roc_curve(Y_test,  Y_test_pred)\n",
    "    roc_auc = metrics.auc(fpr, tpr)\n",
    "    #create ROC curve\n",
    "    plt.plot(fpr,tpr, color=\"darkorange\",\n",
    "        lw=2,\n",
    "        label=\"ROC curve (area = %0.2f)\" % roc_auc)\n",
    "    plt.plot([0, 1], [0, 1], color=\"navy\", lw=2, linestyle=\"--\")\n",
    "    plt.ylabel('True Positive Rate')\n",
    "    plt.xlabel('False Positive Rate')\n",
    "    plt.xlabel(\"False Positive Rate\")\n",
    "    plt.ylabel(\"True Positive Rate\")\n",
    "    plt.title(\"ROC for \"+ classifier)\n",
    "    plt.legend(loc=\"lower right\")\n",
    "    plt.show()\n",
    "    \n",
    "def plot_confusion_matrix(Y_test, Y_test_pred, classifier):\n",
    "    cm = confusion_matrix(Y_test, Y_test_pred)\n",
    "    fig, ax = plt.subplots(figsize=(8, 8))\n",
    "    ax.imshow(cm)\n",
    "    ax.grid(False)\n",
    "    ax.xaxis.set(ticks=(0, 1), ticklabels=('Predicted 0s', 'Predicted 1s'))\n",
    "    ax.yaxis.set(ticks=(0, 1), ticklabels=('Actual 0s', 'Actual 1s'))\n",
    "    ax.set_ylim(1.5, -0.5)\n",
    "    for i in range(2):\n",
    "        for j in range(2):\n",
    "            ax.text(j, i, cm[i, j], ha='center', va='center', color='red')\n",
    "    plt.show()\n",
    "\n",
    "def plot_recall_results(y_true, y_test_pred):\n",
    "    precision_dict = {}\n",
    "    recall_dict = {}\n",
    "    for i in np.arange(0,1,0.1):\n",
    "        threshold = i\n",
    "        thr_op = (y_test_pred >= threshold).astype(int)\n",
    "        cfm = confusion_matrix(y_true,thr_op)\n",
    "        \n",
    "        #calculating recall and precision\n",
    "        recall = cfm[1][1]/(cfm[1][0]+cfm[1][1])\n",
    "        precision = cfm[1][1]/(cfm[1][1]+cfm[0][1])\n",
    "        \n",
    "        #creating dictionary of threshold as key and accuracy as value\n",
    "        precision_dict[\"{:.2f}\".format(i)]=precision\n",
    "        recall_dict[\"{:.2f}\".format(i)]=recall\n",
    "        \n",
    "    x, recall = zip(*sorted(recall_dict.items())) \n",
    "    y, precision = zip(*sorted(precision_dict.items())) \n",
    "    \n",
    "    # Plot precision vs. recall\n",
    "    plt.plot(x, recall, label = \"Recall\")\n",
    "    plt.plot(x, precision, label = \"Precision\")\n",
    "    plt.xlabel('Threshold')\n",
    "    plt.ylabel('Precision and Recall')\n",
    "    plt.legend()\n",
    "    plt.grid()\n",
    "    plt.show()\n",
    "    return precision_dict, recall_dict\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "c0c1214b",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(\n",
    "                                    df_classification[all_features], \n",
    "                                    df_classification[target_var], \n",
    "                                    random_state=2,\n",
    "                                    test_size=0.20)\n",
    "\n",
    "scaler = MinMaxScaler()\n",
    "fit = scaler.fit(X_train)\n",
    "fitted_X_train = fit.transform(X_train)\n",
    "fitted_X_test = fit.transform(X_test)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "40a21f43",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean train sets Recall for Logistic Regression : 0.5651\n",
      "Mean test sets Recall for Logistic Regression : 0.5642\n"
     ]
    }
   ],
   "source": [
    "# Cross-validate on train data\n",
    "clf = LogisticRegression(random_state=2, class_weight='balanced', penalty='l2', solver='lbfgs')\n",
    "scores = cross_validate(clf, fitted_X_train, y_train,\n",
    "                        scoring='recall', cv=5, return_train_score = True)\n",
    "print('Mean train sets Recall for Logistic Regression : {0:.4f}'.format(scores['train_score'].mean()))\n",
    "print('Mean test sets Recall for Logistic Regression : {0:.4f}'.format(scores['test_score'].mean()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "95f3e7df",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[2244  424]\n",
      " [ 727  955]]\n",
      "[[525 125]\n",
      " [181 257]]\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.74      0.81      0.77       650\n",
      "           1       0.67      0.59      0.63       438\n",
      "\n",
      "    accuracy                           0.72      1088\n",
      "   macro avg       0.71      0.70      0.70      1088\n",
      "weighted avg       0.72      0.72      0.71      1088\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Since cross-validation results were good, train final model\n",
    "clf = LogisticRegression(random_state=2, class_weight='balanced', penalty='l2', solver='lbfgs').fit(fitted_X_train, y_train)\n",
    "\n",
    "# Get train set prediction and probabilities\n",
    "Y_test_pred = clf.predict(fitted_X_test)\n",
    "Y_test_proba = clf.predict_proba(fitted_X_test)[:,1]\n",
    "\n",
    "# Get test set prediction and probabilities\n",
    "Y_train_pred = clf.predict(fitted_X_train)\n",
    "Y_train_proba = clf.predict_proba(fitted_X_train)[:,1]\n",
    "\n",
    "\n",
    "print(confusion_matrix(y_train, Y_train_pred))\n",
    "cfm = confusion_matrix(y_test, Y_test_pred)\n",
    "print(cfm)\n",
    "print(classification_report(y_test, Y_test_pred))\n",
    "plot_ROC(y_test, Y_test_proba, 'Logistic Regression Classifier')\n",
    "model1_precision = cfm[1][1]/(cfm[1][1]+cfm[0][1])\n",
    "model1_recall = cfm[1][1]/(cfm[1][0]+cfm[1][1])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "28bea1a3",
   "metadata": {},
   "source": [
    "## Naives Bayes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "a5bcbfc1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cross-validation on the train dataset:\n",
      "Mean train dataset's Recall for Naive Bayes Classifier : 0.0139\n",
      "Mean test dataset's Recall for Naive Bayes Classifier  : 0.0137\n"
     ]
    }
   ],
   "source": [
    "# Cross-validate on train data\n",
    "clf = MultinomialNB()\n",
    "scores = cross_validate(clf, fitted_X_train, y_train,\n",
    "                        scoring='recall', cv=4, return_train_score = True)\n",
    "print('Cross-validation on the train dataset:')\n",
    "print('Mean train dataset\\'s Recall for Naive Bayes Classifier : {0:.4f}'.format(scores['train_score'].mean()))\n",
    "print('Mean test dataset\\'s Recall for Naive Bayes Classifier  : {0:.4f}'.format(scores['test_score'].mean()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "e86eef7f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "confusion_matrix for train dataset: \n",
      " [[2668    0]\n",
      " [1659   23]]\n",
      "confusion_matrix for test dataset: \n",
      " [[650   0]\n",
      " [435   3]]\n",
      "Classification report: \n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.60      1.00      0.75       650\n",
      "           1       1.00      0.01      0.01       438\n",
      "\n",
      "    accuracy                           0.60      1088\n",
      "   macro avg       0.80      0.50      0.38      1088\n",
      "weighted avg       0.76      0.60      0.45      1088\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Since cross-validation results were good, train final model\n",
    "clf_nb = MultinomialNB().fit(fitted_X_train, y_train)\n",
    "\n",
    "# Get train set prediction and probabilities\n",
    "Y_train_pred_nb = clf_nb.predict(fitted_X_train)\n",
    "Y_train_proba_nb = clf_nb.predict_proba(fitted_X_train)[:,1]\n",
    "\n",
    "# Get test set prediction and probabilities\n",
    "Y_test_pred_nb = clf_nb.predict(fitted_X_test)\n",
    "Y_test_proba_nb = clf_nb.predict_proba(fitted_X_test)[:,1]\n",
    "\n",
    "print('confusion_matrix for train dataset: \\n',confusion_matrix(y_train, Y_train_pred_nb))\n",
    "print('confusion_matrix for test dataset: \\n',confusion_matrix(y_test, Y_test_pred_nb))\n",
    "print('Classification report: \\n',classification_report(y_test, Y_test_pred_nb))\n",
    "\n",
    "# ROC curve\n",
    "plot_ROC(y_test, Y_test_proba_nb, 'Naive Bayes Classifier')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "02c794a7",
   "metadata": {},
   "source": [
    "## Random Forests"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "3d303642",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[2555  113]\n",
      " [ 512 1170]]\n",
      "[[549 101]\n",
      " [190 248]]\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.74      0.84      0.79       650\n",
      "           1       0.71      0.57      0.63       438\n",
      "\n",
      "    accuracy                           0.73      1088\n",
      "   macro avg       0.73      0.71      0.71      1088\n",
      "weighted avg       0.73      0.73      0.73      1088\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Fit for model with features selected from RFE earlier and compare with hyperparameter tuned model with just 9 features\n",
    "\n",
    "clf = RandomForestClassifier(n_estimators = 800, max_depth = 9, max_features = 8,\n",
    "                             bootstrap = True, random_state = 18).fit(X_train, y_train)\n",
    "# Get train set prediction and probabilities\n",
    "Y_test_pred = clf.predict(X_test)\n",
    "Y_test_proba = clf.predict_proba(X_test)[:,1]\n",
    "# Get test set prediction and probabilities\n",
    "Y_train_pred = clf.predict(X_train)\n",
    "Y_train_proba = clf.predict_proba(X_train)[:,1]\n",
    "\n",
    "print(confusion_matrix(y_train, Y_train_pred))\n",
    "print(confusion_matrix(y_test, Y_test_pred))\n",
    "print(classification_report(y_test, Y_test_pred))\n",
    "# ROC curve\n",
    "plot_ROC(y_test, Y_test_proba, 'Random Forest Classifier')\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "13cff55f",
   "metadata": {},
   "source": [
    "# Time Series"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "894d6429",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>Sales</th>\n",
       "      <th>InvoiceDate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>491725</td>\n",
       "      <td>45.000</td>\n",
       "      <td>2009-12-14 08:34:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>491742</td>\n",
       "      <td>22.500</td>\n",
       "      <td>2009-12-14 11:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>491744</td>\n",
       "      <td>22.500</td>\n",
       "      <td>2009-12-14 11:02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>492718</td>\n",
       "      <td>22.500</td>\n",
       "      <td>2009-12-18 10:47:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>492722</td>\n",
       "      <td>1.000</td>\n",
       "      <td>2009-12-18 10:55:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36964</th>\n",
       "      <td>18287.0</td>\n",
       "      <td>523290</td>\n",
       "      <td>30.600</td>\n",
       "      <td>2010-09-21 12:19:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36965</th>\n",
       "      <td>18287.0</td>\n",
       "      <td>534346</td>\n",
       "      <td>376.185</td>\n",
       "      <td>2010-11-22 11:51:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36966</th>\n",
       "      <td>18287.0</td>\n",
       "      <td>554065</td>\n",
       "      <td>765.280</td>\n",
       "      <td>2011-05-22 10:39:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36967</th>\n",
       "      <td>18287.0</td>\n",
       "      <td>570715</td>\n",
       "      <td>1001.320</td>\n",
       "      <td>2011-10-12 10:23:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36968</th>\n",
       "      <td>18287.0</td>\n",
       "      <td>573167</td>\n",
       "      <td>70.680</td>\n",
       "      <td>2011-10-28 09:29:00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>36969 rows Ã— 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       CustomerID InvoiceNo     Sales         InvoiceDate\n",
       "0         12346.0    491725    45.000 2009-12-14 08:34:00\n",
       "1         12346.0    491742    22.500 2009-12-14 11:00:00\n",
       "2         12346.0    491744    22.500 2009-12-14 11:02:00\n",
       "3         12346.0    492718    22.500 2009-12-18 10:47:00\n",
       "4         12346.0    492722     1.000 2009-12-18 10:55:00\n",
       "...           ...       ...       ...                 ...\n",
       "36964     18287.0    523290    30.600 2010-09-21 12:19:00\n",
       "36965     18287.0    534346   376.185 2010-11-22 11:51:00\n",
       "36966     18287.0    554065   765.280 2011-05-22 10:39:00\n",
       "36967     18287.0    570715  1001.320 2011-10-12 10:23:00\n",
       "36968     18287.0    573167    70.680 2011-10-28 09:29:00\n",
       "\n",
       "[36969 rows x 4 columns]"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "time_series_df = df_orders.reset_index().copy()\n",
    "time_series_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "065e29da",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>Sales</th>\n",
       "      <th>InvoiceDate</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>month_year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>491725</td>\n",
       "      <td>45.00</td>\n",
       "      <td>2009-12-14 08:34:00</td>\n",
       "      <td>12</td>\n",
       "      <td>2009</td>\n",
       "      <td>12_2009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>491742</td>\n",
       "      <td>22.50</td>\n",
       "      <td>2009-12-14 11:00:00</td>\n",
       "      <td>12</td>\n",
       "      <td>2009</td>\n",
       "      <td>12_2009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>491744</td>\n",
       "      <td>22.50</td>\n",
       "      <td>2009-12-14 11:02:00</td>\n",
       "      <td>12</td>\n",
       "      <td>2009</td>\n",
       "      <td>12_2009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>492718</td>\n",
       "      <td>22.50</td>\n",
       "      <td>2009-12-18 10:47:00</td>\n",
       "      <td>12</td>\n",
       "      <td>2009</td>\n",
       "      <td>12_2009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12346.0</td>\n",
       "      <td>492722</td>\n",
       "      <td>1.00</td>\n",
       "      <td>2009-12-18 10:55:00</td>\n",
       "      <td>12</td>\n",
       "      <td>2009</td>\n",
       "      <td>12_2009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36795</th>\n",
       "      <td>18245.0</td>\n",
       "      <td>580311</td>\n",
       "      <td>894.25</td>\n",
       "      <td>2011-12-02 14:48:00</td>\n",
       "      <td>12</td>\n",
       "      <td>2011</td>\n",
       "      <td>12_2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36908</th>\n",
       "      <td>18272.0</td>\n",
       "      <td>581126</td>\n",
       "      <td>367.88</td>\n",
       "      <td>2011-12-07 12:43:00</td>\n",
       "      <td>12</td>\n",
       "      <td>2011</td>\n",
       "      <td>12_2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36912</th>\n",
       "      <td>18273.0</td>\n",
       "      <td>581136</td>\n",
       "      <td>51.00</td>\n",
       "      <td>2011-12-07 13:16:00</td>\n",
       "      <td>12</td>\n",
       "      <td>2011</td>\n",
       "      <td>12_2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36935</th>\n",
       "      <td>18282.0</td>\n",
       "      <td>580173</td>\n",
       "      <td>77.84</td>\n",
       "      <td>2011-12-02 11:43:00</td>\n",
       "      <td>12</td>\n",
       "      <td>2011</td>\n",
       "      <td>12_2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36957</th>\n",
       "      <td>18283.0</td>\n",
       "      <td>580872</td>\n",
       "      <td>208.00</td>\n",
       "      <td>2011-12-06 12:02:00</td>\n",
       "      <td>12</td>\n",
       "      <td>2011</td>\n",
       "      <td>12_2011</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>36969 rows Ã— 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       CustomerID InvoiceNo   Sales         InvoiceDate  month  year  \\\n",
       "0         12346.0    491725   45.00 2009-12-14 08:34:00     12  2009   \n",
       "1         12346.0    491742   22.50 2009-12-14 11:00:00     12  2009   \n",
       "2         12346.0    491744   22.50 2009-12-14 11:02:00     12  2009   \n",
       "3         12346.0    492718   22.50 2009-12-18 10:47:00     12  2009   \n",
       "4         12346.0    492722    1.00 2009-12-18 10:55:00     12  2009   \n",
       "...           ...       ...     ...                 ...    ...   ...   \n",
       "36795     18245.0    580311  894.25 2011-12-02 14:48:00     12  2011   \n",
       "36908     18272.0    581126  367.88 2011-12-07 12:43:00     12  2011   \n",
       "36912     18273.0    581136   51.00 2011-12-07 13:16:00     12  2011   \n",
       "36935     18282.0    580173   77.84 2011-12-02 11:43:00     12  2011   \n",
       "36957     18283.0    580872  208.00 2011-12-06 12:02:00     12  2011   \n",
       "\n",
       "      month_year  \n",
       "0        12_2009  \n",
       "1        12_2009  \n",
       "2        12_2009  \n",
       "3        12_2009  \n",
       "4        12_2009  \n",
       "...          ...  \n",
       "36795    12_2011  \n",
       "36908    12_2011  \n",
       "36912    12_2011  \n",
       "36935    12_2011  \n",
       "36957    12_2011  \n",
       "\n",
       "[36969 rows x 7 columns]"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "time_series_df['month'] = time_series_df.InvoiceDate.dt.month\n",
    "time_series_df['year'] = time_series_df.InvoiceDate.dt.year\n",
    "time_series_df['month_year']=time_series_df['month'].astype(str)+\"_\"+time_series_df['year'].astype(str)\n",
    "time_series_df.sort_values(by=['year','month'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "450647b1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='InvoiceDate'>"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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ZeHOO+/Ef//7Xxf9JolouPyq6ysRjV1UVJTj31Jp71uAzWaDWCzGjTfeiK1bt2L+/Pn45JNPHEmlTU1NSEpK6nOd5ORk6HS6PseampoQHR0NmUzmODZhwgQAgE6nw6FDh7Bjxw7H96xWKzIyMoYcb2trKxITEwEAFosF69atw759+xAXF4epU6c6xt9fTU0NqqurMWvWLMcxm82GlJSUIZ+PiFyPwQYROXz729/GTTfdhN27dyM2NtbxxzwxMRHV1dV9zq2srMScOXP6HIuLi0NjYyMsFosjkNm2bRs0Gg3i4uJw55134oknnnCcX1VVhbCwsCHHtGfPHsc4XnzxRej1enz11VdQKpUwGo3YvHnzoI+Li4tDVlYW3n//fcex5uZmWCyW4f0yiMhluIxCRA7p6enIzMzE73//e3z72992HL/pppvw73//G8ePH4fFYsEHH3yAgoICXHvttX0eP336dMTGxuKll16CyWTCuXPnsG7dOkgkEnz729/GBx98gLy8PAiCgLy8PNx44404dOjQoGPp6urCq6++ii+//BIPPfSQ45hcLodYLEZXVxeee+452Gw2mM1mAIBcLncsuSxduhR1dXV4++23YbFYUFdXh1WrVuG1115zx6+OiIbAYIOI+rj55pvR0NCAG264wXFs5cqVePjhh/HTn/4Us2fPxr///W/89a9/xfjx4/s8Vi6XY9OmTSgqKsLChQtx33334eGHH8bixYuRm5uL3/zmN3j22WeRm5uLJ554Ao8//jhWrFjhePzPfvYz5OTkICcnB1dffTWOHz+Of/3rX47n+dGPfoSGhgbMnTsX11xzDWQyGbKzs3H69GkAwDXXXIOvvvoKt956K0JDQ/HGG2/g448/xuWXX46bbroJubm5+NnPfuaB3yIRXUwkCILg7UEQERFR4OLMBhEREbkVgw0iIiJyKwYbRERE5FYMNoiIiMitGGwQERGRWzHYICIiIrdisEFERERuxWCDiIiI3IrBBhEREbnV/wfuBikYaU3tSwAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from matplotlib.pyplot import figure\n",
    "\n",
    "figure(figsize=(8, 6), dpi=80)\n",
    "time_series_gb_df=time_series_df.groupby(pd.Grouper(key='InvoiceDate', freq=\"1m\"))['Sales'].sum().sort_index()\n",
    "time_series_gb_df.plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "291bac96",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x576 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from pylab import rcParams\n",
    "rcParams['figure.figsize'] = 18, 8\n",
    "\n",
    "decomposition = sm.tsa.seasonal_decompose(time_series_gb_df)\n",
    "fig = decomposition.plot()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "866d9a4b",
   "metadata": {},
   "source": [
    "z"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
